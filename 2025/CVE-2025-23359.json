{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.1",
	"cveMetadata": {
		"cveId": "CVE-2025-23359",
		"assignerOrgId": "9576f279-3576-44b5-a4af-b9a8644b2de6",
		"assignerShortName": "nvidia",
		"state": "PUBLISHED",
		"datePublished": "2025-02-12T00:52:43.646Z",
		"dateUpdated": "2025-02-12T00:52:43.646Z",
		"dateReserved": "2025-01-14T01:07:26.681Z"
	},
	"containers": {
		"cna": {
			"providerMetadata": {
				"orgID": "9576f279-3576-44b5-a4af-b9a8644b2de6",
				"shortName": "nvidia",
				"dateUpdated": "2025-02-12T00:52:43.646Z"
			},
			"descriptions": [
				{
					"lang": "en",
					"value": "NVIDIA Container Toolkit for Linux contains a Time-of-Check Time-of-Use (TOCTOU) vulnerability when used with default configuration, where a crafted container image could gain access to the host file system. A successful exploit of this vulnerability might lead to code execution, denial of service, escalation of privileges, information disclosure, and data tampering.",
					"supportingMedia": [
						{
							"type": "text/html",
							"base64": false,
							"value": "<span style=\"background-color: rgb(255, 255, 255);\">NVIDIA Container Toolkit for Linux contains a Time-of-Check Time-of-Use (TOCTOU) vulnerability when used with default configuration, where a crafted container image could gain access to the host file system. A successful exploit of this vulnerability might lead to code execution, denial of service, escalation of privileges, information disclosure, and data tampering.</span>"
						}
					]
				}
			],
			"affected": [
				{
					"vendor": "NVIDIA",
					"product": "Container Toolkit",
					"platforms": [
						"Linux"
					],
					"defaultStatus": "unaffected",
					"versions": [
						{
							"status": "affected",
							"version": "All versions up to and including 1.17.3"
						}
					]
				},
				{
					"vendor": "NVIDIA",
					"product": "GPU Operator",
					"platforms": [
						"Linux"
					],
					"defaultStatus": "unaffected",
					"versions": [
						{
							"status": "affected",
							"version": "All versions up to and including 24.9.1"
						}
					]
				}
			],
			"problemTypes": [
				{
					"descriptions": [
						{
							"type": "CWE",
							"lang": "en",
							"description": "CWE-367 Time-of-check Time-of-use (TOCTOU) Race Condition",
							"cweId": "CWE-367"
						}
					]
				}
			],
			"impacts": [
				{
					"descriptions": [
						{
							"lang": "en",
							"value": "Code execution, denial of service, escalation of privileges, information disclosure, data tampering"
						}
					]
				}
			],
			"metrics": [
				{
					"format": "CVSS",
					"scenarios": [
						{
							"lang": "en",
							"value": "GENERAL"
						}
					],
					"cvssV3_1": {
						"version": "3.1",
						"vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H",
						"attackVector": "NETWORK",
						"attackComplexity": "HIGH",
						"privilegesRequired": "NONE",
						"userInteraction": "REQUIRED",
						"scope": "CHANGED",
						"confidentialityImpact": "HIGH",
						"integrityImpact": "HIGH",
						"availabilityImpact": "HIGH",
						"baseScore": 8.3,
						"baseSeverity": "HIGH"
					}
				}
			],
			"workarounds": [
				{
					"lang": "en",
					"value": "This vulnerability does not impact use cases where CDI is used.\n\n\nThe fix for this vulnerability changes the default behavior of the NVIDIA Container Toolkit. By default the NVIDIA CUDA compatibility libraries from /usr/local/cuda/compat in the container are no longer mounted to the default library path in the container being run. This may affect certain applications that depend on this behavior.\n\n\nA feature flag, allow-cuda-compat-libs-from-container was included in the NVIDIA Container Toolkit to allow users to opt-in to the previous behavior if required.\nWarning: Opting-in to the previous behavior will remove protection against this vulnerability and is not recommended.\n\n\nTo set the feature flag ensure that the NVIDIA Container Toolkit config file at /etc/nvidia-container-runtime/config.toml includes:\n\n[features]\n  allow-cuda-compat-libs-from-container = true\n\n Setting the value above to false or removing the config file entry will disable the feature.\n\n\nIn the case of the NVIDIA GPU Operator the feature flag can be set by including the following in the NVIDIA GPU Operator helm install command:\n\n--set \"toolkit.env[0].name=NVIDIA_CONTAINER_TOOLKIT_OPT_IN_FEATURES\" --set \"toolkit.env[0].value=allow-cuda-compat-libs-from-container\"\n\n \n\nFor users who know that their application needs CUDA Forward Compatibility the following workaround can be used:\n\n\nSetting the LD_LIBRARY_PATH environment variable to include /usr/local/cuda/compat\n\n\nThis may cause portability issues for some containers when running across multiple driver versions – especially when these are more recent than the compatibility libraries in the container.",
					"supportingMedia": [
						{
							"type": "text/html",
							"base64": false,
							"value": "<div>This vulnerability does not impact use cases where CDI is used.</div><div><br>The fix for this vulnerability changes the default behavior of the NVIDIA Container Toolkit. By default the NVIDIA CUDA compatibility libraries from /usr/local/cuda/compat in the container are no longer mounted to the default library path in the container being run. This may affect certain applications that depend on this behavior.</div><div><br>A feature flag, allow-cuda-compat-libs-from-container was included in the NVIDIA Container Toolkit to allow users to opt-in to the previous behavior if required.<br>Warning: Opting-in to the previous behavior will remove protection against this vulnerability and is not recommended.</div><div><br>To set the feature flag ensure that the NVIDIA Container Toolkit config file at /etc/nvidia-container-runtime/config.toml includes:<br><br>[features]<br>&nbsp; allow-cuda-compat-libs-from-container = true</div><span style=\"background-color: rgb(255, 255, 255);\">&nbsp;</span><div>Setting the value above to false or removing the config file entry will disable the feature.</div><div><br>In the case of the NVIDIA GPU Operator the feature flag can be set by including the following in the NVIDIA GPU Operator helm install command:</div><div>--set \"toolkit.env[0].name=NVIDIA_CONTAINER_TOOLKIT_OPT_IN_FEATURES\" --set \"toolkit.env[0].value=allow-cuda-compat-libs-from-container\"</div><div>&nbsp;</div><div>For users who know that their application needs CUDA Forward Compatibility the following workaround can be used:</div><div><br>Setting the LD_LIBRARY_PATH environment variable to include /usr/local/cuda/compat</div><div><br>This may cause portability issues for some containers when running across multiple driver versions – especially when these are more recent than the compatibility libraries in the container.</div>\n\n<br>"
						}
					]
				}
			],
			"references": [
				{
					"url": "https://nvidia.custhelp.com/app/answers/detail/a_id/5616"
				}
			],
			"source": {
				"discovery": "UNKNOWN"
			},
			"x_generator": {
				"engine": "Vulnogram 0.2.0"
			}
		}
	}
}
