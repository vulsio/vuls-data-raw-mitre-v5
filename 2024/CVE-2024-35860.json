{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.1",
	"cveMetadata": {
		"cveId": "CVE-2024-35860",
		"assignerOrgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
		"assignerShortName": "Linux",
		"state": "PUBLISHED",
		"datePublished": "2024-05-19T08:34:19.368Z",
		"dateUpdated": "2024-08-02T03:21:48.532Z",
		"dateReserved": "2024-05-17T13:50:33.107Z"
	},
	"containers": {
		"cna": {
			"providerMetadata": {
				"orgID": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
				"shortName": "Linux",
				"dateUpdated": "2024-05-29T05:30:16.407Z"
			},
			"title": "bpf: support deferring bpf_link dealloc to after RCU grace period",
			"descriptions": [
				{
					"lang": "en",
					"value": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: support deferring bpf_link dealloc to after RCU grace period\n\nBPF link for some program types is passed as a \"context\" which can be\nused by those BPF programs to look up additional information. E.g., for\nmulti-kprobes and multi-uprobes, link is used to fetch BPF cookie values.\n\nBecause of this runtime dependency, when bpf_link refcnt drops to zero\nthere could still be active BPF programs running accessing link data.\n\nThis patch adds generic support to defer bpf_link dealloc callback to\nafter RCU GP, if requested. This is done by exposing two different\ndeallocation callbacks, one synchronous and one deferred. If deferred\none is provided, bpf_link_free() will schedule dealloc_deferred()\ncallback to happen after RCU GP.\n\nBPF is using two flavors of RCU: \"classic\" non-sleepable one and RCU\ntasks trace one. The latter is used when sleepable BPF programs are\nused. bpf_link_free() accommodates that by checking underlying BPF\nprogram's sleepable flag, and goes either through normal RCU GP only for\nnon-sleepable, or through RCU tasks trace GP *and* then normal RCU GP\n(taking into account rcu_trace_implies_rcu_gp() optimization), if BPF\nprogram is sleepable.\n\nWe use this for multi-kprobe and multi-uprobe links, which dereference\nlink during program run. We also preventively switch raw_tp link to use\ndeferred dealloc callback, as upcoming changes in bpf-next tree expose\nraw_tp link data (specifically, cookie value) to BPF program at runtime\nas well."
				}
			],
			"affected": [
				{
					"vendor": "Linux",
					"product": "Linux",
					"programFiles": [
						"include/linux/bpf.h",
						"kernel/bpf/syscall.c",
						"kernel/trace/bpf_trace.c"
					],
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"defaultStatus": "unaffected",
					"versions": [
						{
							"status": "affected",
							"versionType": "git",
							"version": "0dcac2725406",
							"lessThan": "876941f533e7"
						},
						{
							"status": "affected",
							"versionType": "git",
							"version": "0dcac2725406",
							"lessThan": "5d8d44777756"
						},
						{
							"status": "affected",
							"versionType": "git",
							"version": "0dcac2725406",
							"lessThan": "1a80dbcb2dba"
						}
					]
				},
				{
					"vendor": "Linux",
					"product": "Linux",
					"programFiles": [
						"include/linux/bpf.h",
						"kernel/bpf/syscall.c",
						"kernel/trace/bpf_trace.c"
					],
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"defaultStatus": "affected",
					"versions": [
						{
							"status": "affected",
							"version": "5.18"
						},
						{
							"status": "unaffected",
							"versionType": "custom",
							"version": "0",
							"lessThan": "5.18"
						},
						{
							"status": "unaffected",
							"versionType": "custom",
							"version": "6.6.26",
							"lessThanOrEqual": "6.6.*"
						},
						{
							"status": "unaffected",
							"versionType": "custom",
							"version": "6.8.5",
							"lessThanOrEqual": "6.8.*"
						},
						{
							"status": "unaffected",
							"versionType": "original_commit_for_fix",
							"version": "6.9",
							"lessThanOrEqual": "*"
						}
					]
				}
			],
			"references": [
				{
					"url": "https://git.kernel.org/stable/c/876941f533e7b47fc69977fc4551c02f2d18af97"
				},
				{
					"url": "https://git.kernel.org/stable/c/5d8d447777564b35f67000e7838e7ccb64d525c8"
				},
				{
					"url": "https://git.kernel.org/stable/c/1a80dbcb2dbaf6e4c216e62e30fa7d3daa8001ce"
				}
			],
			"x_generator": {
				"engine": "bippy-a5840b7849dd"
			}
		},
		"adp": [
			{
				"providerMetadata": {
					"orgID": "af854a3a-2127-422b-91ae-364da2661108",
					"shortName": "CVE",
					"dateUpdated": "2024-08-02T03:21:48.532Z"
				},
				"title": "CVE Program Container",
				"references": [
					{
						"tags": [
							"x_transferred"
						],
						"url": "https://git.kernel.org/stable/c/876941f533e7b47fc69977fc4551c02f2d18af97"
					},
					{
						"tags": [
							"x_transferred"
						],
						"url": "https://git.kernel.org/stable/c/5d8d447777564b35f67000e7838e7ccb64d525c8"
					},
					{
						"tags": [
							"x_transferred"
						],
						"url": "https://git.kernel.org/stable/c/1a80dbcb2dbaf6e4c216e62e30fa7d3daa8001ce"
					}
				]
			}
		]
	}
}
