{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.1",
	"cveMetadata": {
		"assignerOrgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
		"assignerShortName": "Linux",
		"cveId": "CVE-2024-35804",
		"datePublished": "2024-05-17T13:23:12.895Z",
		"dateReserved": "2024-05-17T12:19:12.341Z",
		"dateUpdated": "2024-05-29T05:29:16.563Z",
		"state": "PUBLISHED"
	},
	"containers": {
		"cna": {
			"affected": [
				{
					"defaultStatus": "unaffected",
					"product": "Linux",
					"programFiles": [
						"arch/x86/kvm/x86.c"
					],
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"vendor": "Linux",
					"versions": [
						{
							"lessThan": "a9bd6bb6f02b",
							"status": "affected",
							"version": "d97c0667c1e6",
							"versionType": "git"
						},
						{
							"lessThan": "726374dde5d6",
							"status": "affected",
							"version": "1c2361f667f3",
							"versionType": "git"
						},
						{
							"lessThan": "9d1b22e573a3",
							"status": "affected",
							"version": "1c2361f667f3",
							"versionType": "git"
						},
						{
							"lessThan": "225d587a0735",
							"status": "affected",
							"version": "1c2361f667f3",
							"versionType": "git"
						},
						{
							"lessThan": "910c57dfa4d1",
							"status": "affected",
							"version": "1c2361f667f3",
							"versionType": "git"
						}
					]
				},
				{
					"defaultStatus": "affected",
					"product": "Linux",
					"programFiles": [
						"arch/x86/kvm/x86.c"
					],
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"vendor": "Linux",
					"versions": [
						{
							"status": "affected",
							"version": "5.19"
						},
						{
							"lessThan": "5.19",
							"status": "unaffected",
							"version": "0",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.15.*",
							"status": "unaffected",
							"version": "5.15.154",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "6.1.*",
							"status": "unaffected",
							"version": "6.1.84",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "6.6.*",
							"status": "unaffected",
							"version": "6.6.24",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "6.7.*",
							"status": "unaffected",
							"version": "6.7.12",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "*",
							"status": "unaffected",
							"version": "6.8",
							"versionType": "original_commit_for_fix"
						}
					]
				}
			],
			"descriptions": [
				{
					"lang": "en",
					"value": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86: Mark target gfn of emulated atomic instruction as dirty\n\nWhen emulating an atomic access on behalf of the guest, mark the target\ngfn dirty if the CMPXCHG by KVM is attempted and doesn't fault.  This\nfixes a bug where KVM effectively corrupts guest memory during live\nmigration by writing to guest memory without informing userspace that the\npage is dirty.\n\nMarking the page dirty got unintentionally dropped when KVM's emulated\nCMPXCHG was converted to do a user access.  Before that, KVM explicitly\nmapped the guest page into kernel memory, and marked the page dirty during\nthe unmap phase.\n\nMark the page dirty even if the CMPXCHG fails, as the old data is written\nback on failure, i.e. the page is still written.  The value written is\nguaranteed to be the same because the operation is atomic, but KVM's ABI\nis that all writes are dirty logged regardless of the value written.  And\nmore importantly, that's what KVM did before the buggy commit.\n\nHuge kudos to the folks on the Cc list (and many others), who did all the\nactual work of triaging and debugging.\n\nbase-commit: 6769ea8da8a93ed4630f1ce64df6aafcaabfce64"
				}
			],
			"providerMetadata": {
				"dateUpdated": "2024-05-29T05:29:16.563Z",
				"orgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
				"shortName": "Linux"
			},
			"references": [
				{
					"url": "https://git.kernel.org/stable/c/a9bd6bb6f02bf7132c1ab192ba62bbfa52df7d66"
				},
				{
					"url": "https://git.kernel.org/stable/c/726374dde5d608b15b9756bd52b6fc283fda7a06"
				},
				{
					"url": "https://git.kernel.org/stable/c/9d1b22e573a3789ed1f32033ee709106993ba551"
				},
				{
					"url": "https://git.kernel.org/stable/c/225d587a073584946c05c9b7651d637bd45c0c71"
				},
				{
					"url": "https://git.kernel.org/stable/c/910c57dfa4d113aae6571c2a8b9ae8c430975902"
				}
			],
			"title": "KVM: x86: Mark target gfn of emulated atomic instruction as dirty",
			"x_generator": {
				"engine": "bippy-a5840b7849dd"
			}
		}
	}
}
