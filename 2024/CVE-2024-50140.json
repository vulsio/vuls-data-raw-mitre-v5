{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.1",
	"cveMetadata": {
		"cveId": "CVE-2024-50140",
		"assignerOrgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
		"assignerShortName": "Linux",
		"state": "PUBLISHED",
		"datePublished": "2024-11-07T09:31:17.379Z",
		"dateUpdated": "2024-11-07T09:31:17.379Z",
		"dateReserved": "2024-10-21T19:36:19.956Z"
	},
	"containers": {
		"cna": {
			"providerMetadata": {
				"orgID": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
				"shortName": "Linux",
				"dateUpdated": "2024-11-07T09:31:17.379Z"
			},
			"title": "sched/core: Disable page allocation in task_tick_mm_cid()",
			"descriptions": [
				{
					"lang": "en",
					"value": "In the Linux kernel, the following vulnerability has been resolved:\n\nsched/core: Disable page allocation in task_tick_mm_cid()\n\nWith KASAN and PREEMPT_RT enabled, calling task_work_add() in\ntask_tick_mm_cid() may cause the following splat.\n\n[   63.696416] BUG: sleeping function called from invalid context at kernel/locking/spinlock_rt.c:48\n[   63.696416] in_atomic(): 1, irqs_disabled(): 1, non_block: 0, pid: 610, name: modprobe\n[   63.696416] preempt_count: 10001, expected: 0\n[   63.696416] RCU nest depth: 1, expected: 1\n\nThis problem is caused by the following call trace.\n\n  sched_tick() [ acquire rq->__lock ]\n   -> task_tick_mm_cid()\n    -> task_work_add()\n     -> __kasan_record_aux_stack()\n      -> kasan_save_stack()\n       -> stack_depot_save_flags()\n        -> alloc_pages_mpol_noprof()\n         -> __alloc_pages_noprof()\n\t  -> get_page_from_freelist()\n\t   -> rmqueue()\n\t    -> rmqueue_pcplist()\n\t     -> __rmqueue_pcplist()\n\t      -> rmqueue_bulk()\n\t       -> rt_spin_lock()\n\nThe rq lock is a raw_spinlock_t. We can't sleep while holding\nit. IOW, we can't call alloc_pages() in stack_depot_save_flags().\n\nThe task_tick_mm_cid() function with its task_work_add() call was\nintroduced by commit 223baf9d17f2 (\"sched: Fix performance regression\nintroduced by mm_cid\") in v6.4 kernel.\n\nFortunately, there is a kasan_record_aux_stack_noalloc() variant that\ncalls stack_depot_save_flags() while not allowing it to allocate\nnew pages.  To allow task_tick_mm_cid() to use task_work without\npage allocation, a new TWAF_NO_ALLOC flag is added to enable calling\nkasan_record_aux_stack_noalloc() instead of kasan_record_aux_stack()\nif set. The task_tick_mm_cid() function is modified to add this new flag.\n\nThe possible downside is the missing stack trace in a KASAN report due\nto new page allocation required when task_work_add_noallloc() is called\nwhich should be rare."
				}
			],
			"affected": [
				{
					"vendor": "Linux",
					"product": "Linux",
					"programFiles": [
						"include/linux/task_work.h",
						"kernel/sched/core.c",
						"kernel/task_work.c"
					],
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"defaultStatus": "unaffected",
					"versions": [
						{
							"status": "affected",
							"versionType": "git",
							"version": "223baf9d17f2",
							"lessThan": "509c29d0d26f"
						},
						{
							"status": "affected",
							"versionType": "git",
							"version": "223baf9d17f2",
							"lessThan": "ce0241ef83ee"
						},
						{
							"status": "affected",
							"versionType": "git",
							"version": "223baf9d17f2",
							"lessThan": "73ab05aa46b0"
						}
					]
				},
				{
					"vendor": "Linux",
					"product": "Linux",
					"programFiles": [
						"include/linux/task_work.h",
						"kernel/sched/core.c",
						"kernel/task_work.c"
					],
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"defaultStatus": "affected",
					"versions": [
						{
							"status": "affected",
							"version": "6.4"
						},
						{
							"status": "unaffected",
							"versionType": "semver",
							"version": "0",
							"lessThan": "6.4"
						},
						{
							"status": "unaffected",
							"versionType": "semver",
							"version": "6.6.59",
							"lessThanOrEqual": "6.6.*"
						},
						{
							"status": "unaffected",
							"versionType": "semver",
							"version": "6.11.6",
							"lessThanOrEqual": "6.11.*"
						},
						{
							"status": "unaffected",
							"versionType": "original_commit_for_fix",
							"version": "6.12-rc4",
							"lessThanOrEqual": "*"
						}
					]
				}
			],
			"references": [
				{
					"url": "https://git.kernel.org/stable/c/509c29d0d26f68a6f6d0a05cb1a89725237e2b87"
				},
				{
					"url": "https://git.kernel.org/stable/c/ce0241ef83eed55f675376e8a3605d23de53d875"
				},
				{
					"url": "https://git.kernel.org/stable/c/73ab05aa46b02d96509cb029a8d04fca7bbde8c7"
				}
			],
			"x_generator": {
				"engine": "bippy-9e1c9544281a"
			}
		}
	}
}
