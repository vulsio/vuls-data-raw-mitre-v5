{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.1",
	"cveMetadata": {
		"cveId": "CVE-2024-56655",
		"assignerOrgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
		"assignerShortName": "Linux",
		"state": "PUBLISHED",
		"datePublished": "2024-12-27T15:06:19.033Z",
		"dateUpdated": "2025-01-20T06:25:09.285Z",
		"dateReserved": "2024-12-27T15:00:39.841Z"
	},
	"containers": {
		"cna": {
			"providerMetadata": {
				"orgID": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
				"shortName": "Linux",
				"dateUpdated": "2025-01-20T06:25:09.285Z"
			},
			"title": "netfilter: nf_tables: do not defer rule destruction via call_rcu",
			"descriptions": [
				{
					"lang": "en",
					"value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: do not defer rule destruction via call_rcu\n\nnf_tables_chain_destroy can sleep, it can't be used from call_rcu\ncallbacks.\n\nMoreover, nf_tables_rule_release() is only safe for error unwinding,\nwhile transaction mutex is held and the to-be-desroyed rule was not\nexposed to either dataplane or dumps, as it deactives+frees without\nthe required synchronize_rcu() in-between.\n\nnft_rule_expr_deactivate() callbacks will change ->use counters\nof other chains/sets, see e.g. nft_lookup .deactivate callback, these\nmust be serialized via transaction mutex.\n\nAlso add a few lockdep asserts to make this more explicit.\n\nCalling synchronize_rcu() isn't ideal, but fixing this without is hard\nand way more intrusive.  As-is, we can get:\n\nWARNING: .. net/netfilter/nf_tables_api.c:5515 nft_set_destroy+0x..\nWorkqueue: events nf_tables_trans_destroy_work\nRIP: 0010:nft_set_destroy+0x3fe/0x5c0\nCall Trace:\n <TASK>\n nf_tables_trans_destroy_work+0x6b7/0xad0\n process_one_work+0x64a/0xce0\n worker_thread+0x613/0x10d0\n\nIn case the synchronize_rcu becomes an issue, we can explore alternatives.\n\nOne way would be to allocate nft_trans_rule objects + one nft_trans_chain\nobject, deactivate the rules + the chain and then defer the freeing to the\nnft destroy workqueue.  We'd still need to keep the synchronize_rcu path as\na fallback to handle -ENOMEM corner cases though."
				}
			],
			"affected": [
				{
					"vendor": "Linux",
					"product": "Linux",
					"programFiles": [
						"include/net/netfilter/nf_tables.h",
						"net/netfilter/nf_tables_api.c"
					],
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"defaultStatus": "unaffected",
					"versions": [
						{
							"status": "affected",
							"versionType": "git",
							"version": "bfd05c68e4c6320304e9f371ffa356b6e4b9cc53",
							"lessThan": "27f0574253f6c24c8ee4e3f0a685b75ed3a256ed"
						},
						{
							"status": "affected",
							"versionType": "git",
							"version": "c03d278fdf35e73dd0ec543b9b556876b9d9a8dc",
							"lessThan": "7cf0bd232b565d9852cb25fd094f77254773e048"
						},
						{
							"status": "affected",
							"versionType": "git",
							"version": "c03d278fdf35e73dd0ec543b9b556876b9d9a8dc",
							"lessThan": "b04df3da1b5c6f6dc7cdccc37941740c078c4043"
						}
					]
				},
				{
					"vendor": "Linux",
					"product": "Linux",
					"programFiles": [
						"include/net/netfilter/nf_tables.h",
						"net/netfilter/nf_tables_api.c"
					],
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"defaultStatus": "affected",
					"versions": [
						{
							"status": "affected",
							"version": "6.12"
						},
						{
							"status": "unaffected",
							"versionType": "semver",
							"version": "0",
							"lessThan": "6.12"
						},
						{
							"status": "unaffected",
							"versionType": "semver",
							"version": "6.6.67",
							"lessThanOrEqual": "6.6.*"
						},
						{
							"status": "unaffected",
							"versionType": "semver",
							"version": "6.12.6",
							"lessThanOrEqual": "6.12.*"
						},
						{
							"status": "unaffected",
							"versionType": "original_commit_for_fix",
							"version": "6.13",
							"lessThanOrEqual": "*"
						}
					]
				}
			],
			"references": [
				{
					"url": "https://git.kernel.org/stable/c/27f0574253f6c24c8ee4e3f0a685b75ed3a256ed"
				},
				{
					"url": "https://git.kernel.org/stable/c/7cf0bd232b565d9852cb25fd094f77254773e048"
				},
				{
					"url": "https://git.kernel.org/stable/c/b04df3da1b5c6f6dc7cdccc37941740c078c4043"
				}
			],
			"x_generator": {
				"engine": "bippy-5f407fcff5a0"
			}
		}
	}
}
