{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.1",
	"cveMetadata": {
		"assignerOrgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
		"assignerShortName": "Linux",
		"cveId": "CVE-2024-35955",
		"datePublished": "2024-05-20T09:41:48.607Z",
		"dateReserved": "2024-05-17T13:50:33.136Z",
		"dateUpdated": "2024-05-20T09:41:48.607Z",
		"state": "PUBLISHED"
	},
	"containers": {
		"cna": {
			"affected": [
				{
					"defaultStatus": "unaffected",
					"product": "Linux",
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"vendor": "Linux",
					"versions": [
						{
							"lessThan": "b5808d400934",
							"status": "affected",
							"version": "1c836bad43f3",
							"versionType": "git"
						},
						{
							"lessThan": "93eb31e7c339",
							"status": "affected",
							"version": "6a119c1a584a",
							"versionType": "git"
						},
						{
							"lessThan": "5062d1f4f07f",
							"status": "affected",
							"version": "2a49b025c36a",
							"versionType": "git"
						},
						{
							"lessThan": "2df2dd27066c",
							"status": "affected",
							"version": "a1edb85e60fd",
							"versionType": "git"
						},
						{
							"lessThan": "62029bc9ff2c",
							"status": "affected",
							"version": "28f6c37a2910",
							"versionType": "git"
						},
						{
							"lessThan": "d15023fb4073",
							"status": "affected",
							"version": "28f6c37a2910",
							"versionType": "git"
						},
						{
							"lessThan": "36b57c7d2f8b",
							"status": "affected",
							"version": "28f6c37a2910",
							"versionType": "git"
						},
						{
							"lessThan": "325f3fb551f8",
							"status": "affected",
							"version": "28f6c37a2910",
							"versionType": "git"
						}
					]
				},
				{
					"defaultStatus": "affected",
					"product": "Linux",
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"vendor": "Linux",
					"versions": [
						{
							"status": "affected",
							"version": "6.0"
						},
						{
							"lessThan": "6.0",
							"status": "unaffected",
							"version": "0",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "4.19.*",
							"status": "unaffected",
							"version": "4.19.313",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.4.*",
							"status": "unaffected",
							"version": "5.4.275",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.10.*",
							"status": "unaffected",
							"version": "5.10.216",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.15.*",
							"status": "unaffected",
							"version": "5.15.157",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "6.1.*",
							"status": "unaffected",
							"version": "6.1.87",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "6.6.*",
							"status": "unaffected",
							"version": "6.6.28",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "6.8.*",
							"status": "unaffected",
							"version": "6.8.7",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "*",
							"status": "unaffected",
							"version": "6.9",
							"versionType": "original_commit_for_fix"
						}
					]
				}
			],
			"descriptions": [
				{
					"lang": "en",
					"value": "In the Linux kernel, the following vulnerability has been resolved:\n\nkprobes: Fix possible use-after-free issue on kprobe registration\n\nWhen unloading a module, its state is changing MODULE_STATE_LIVE ->\n MODULE_STATE_GOING -> MODULE_STATE_UNFORMED. Each change will take\na time. `is_module_text_address()` and `__module_text_address()`\nworks with MODULE_STATE_LIVE and MODULE_STATE_GOING.\nIf we use `is_module_text_address()` and `__module_text_address()`\nseparately, there is a chance that the first one is succeeded but the\nnext one is failed because module->state becomes MODULE_STATE_UNFORMED\nbetween those operations.\n\nIn `check_kprobe_address_safe()`, if the second `__module_text_address()`\nis failed, that is ignored because it expected a kernel_text address.\nBut it may have failed simply because module->state has been changed\nto MODULE_STATE_UNFORMED. In this case, arm_kprobe() will try to modify\nnon-exist module text address (use-after-free).\n\nTo fix this problem, we should not use separated `is_module_text_address()`\nand `__module_text_address()`, but use only `__module_text_address()`\nonce and do `try_module_get(module)` which is only available with\nMODULE_STATE_LIVE."
				}
			],
			"providerMetadata": {
				"dateUpdated": "2024-05-20T09:41:48.607Z",
				"orgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
				"shortName": "Linux"
			},
			"references": [
				{
					"url": "https://git.kernel.org/stable/c/b5808d40093403334d939e2c3c417144d12a6f33"
				},
				{
					"url": "https://git.kernel.org/stable/c/93eb31e7c3399e326259f2caa17be1e821f5a412"
				},
				{
					"url": "https://git.kernel.org/stable/c/5062d1f4f07facbdade0f402d9a04a788f52e26d"
				},
				{
					"url": "https://git.kernel.org/stable/c/2df2dd27066cdba8041e46a64362325626bdfb2e"
				},
				{
					"url": "https://git.kernel.org/stable/c/62029bc9ff2c17a4e3a2478d83418ec575413808"
				},
				{
					"url": "https://git.kernel.org/stable/c/d15023fb407337028a654237d8968fefdcf87c2f"
				},
				{
					"url": "https://git.kernel.org/stable/c/36b57c7d2f8b7de224980f1a284432846ad71ca0"
				},
				{
					"url": "https://git.kernel.org/stable/c/325f3fb551f8cd672dbbfc4cf58b14f9ee3fc9e8"
				}
			],
			"title": "kprobes: Fix possible use-after-free issue on kprobe registration",
			"x_generator": {
				"engine": "bippy-d175d3acf727"
			}
		}
	}
}
