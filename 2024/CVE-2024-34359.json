{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.1",
	"cveMetadata": {
		"assignerOrgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
		"assignerShortName": "GitHub_M",
		"cveId": "CVE-2024-34359",
		"datePublished": "2024-05-10T17:07:18.850Z",
		"dateReserved": "2024-05-02T06:36:32.439Z",
		"dateUpdated": "2024-06-04T17:42:49.451Z",
		"state": "PUBLISHED"
	},
	"containers": {
		"cna": {
			"affected": [
				{
					"product": "llama-cpp-python",
					"vendor": "abetlen",
					"versions": [
						{
							"status": "affected",
							"version": ">= 0.2.30, <= 0.2.71"
						}
					]
				}
			],
			"descriptions": [
				{
					"lang": "en",
					"value": "llama-cpp-python is the Python bindings for llama.cpp. `llama-cpp-python` depends on class `Llama` in `llama.py` to load `.gguf` llama.cpp or Latency Machine Learning Models. The `__init__` constructor built in the `Llama` takes several parameters to configure the loading and running of the model. Other than `NUMA, LoRa settings`, `loading tokenizers,` and `hardware settings`, `__init__` also loads the `chat template` from targeted `.gguf` 's Metadata and furtherly parses it to `llama_chat_format.Jinja2ChatFormatter.to_chat_handler()` to construct the `self.chat_handler` for this model. Nevertheless, `Jinja2ChatFormatter` parse the `chat template` within the Metadate with sandbox-less `jinja2.Environment`, which is furthermore rendered in `__call__` to construct the `prompt` of interaction. This allows `jinja2` Server Side Template Injection which leads to remote code execution by a carefully constructed payload."
				}
			],
			"metrics": [
				{
					"cvssV3_1": {
						"version": "3.1",
						"vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
						"baseScore": 9.7,
						"baseSeverity": "CRITICAL",
						"attackComplexity": "LOW",
						"attackVector": "NETWORK",
						"availabilityImpact": "HIGH",
						"confidentialityImpact": "HIGH",
						"integrityImpact": "HIGH",
						"privilegesRequired": "NONE",
						"scope": "CHANGED",
						"userInteraction": "REQUIRED"
					}
				}
			],
			"problemTypes": [
				{
					"descriptions": [
						{
							"cweid": "CWE-76",
							"description": "CWE-76: Improper Neutralization of Equivalent Special Elements",
							"lang": "en",
							"type": "CWE"
						}
					]
				}
			],
			"providerMetadata": {
				"dateUpdated": "2024-05-10T17:07:18.850Z",
				"orgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
				"shortName": "GitHub_M"
			},
			"references": [
				{
					"name": "https://github.com/abetlen/llama-cpp-python/security/advisories/GHSA-56xg-wfcc-g829",
					"tags": [
						"x_refsource_CONFIRM"
					],
					"url": "https://github.com/abetlen/llama-cpp-python/security/advisories/GHSA-56xg-wfcc-g829"
				},
				{
					"name": "https://github.com/abetlen/llama-cpp-python/commit/b454f40a9a1787b2b5659cd2cb00819d983185df",
					"tags": [
						"x_refsource_MISC"
					],
					"url": "https://github.com/abetlen/llama-cpp-python/commit/b454f40a9a1787b2b5659cd2cb00819d983185df"
				}
			],
			"source": {
				"advisory": "GHSA-56xg-wfcc-g829",
				"discovery": "UNKNOWN"
			},
			"title": "llama-cpp-python vulnerable to Remote Code Execution by Server-Side Template Injection in Model Metadata"
		}
	}
}
