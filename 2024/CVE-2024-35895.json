{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.1",
	"cveMetadata": {
		"assignerOrgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
		"assignerShortName": "Linux",
		"cveId": "CVE-2024-35895",
		"datePublished": "2024-05-19T08:34:50.276Z",
		"dateReserved": "2024-05-17T13:50:33.113Z",
		"dateUpdated": "2024-05-29T05:30:51.843Z",
		"state": "PUBLISHED"
	},
	"containers": {
		"cna": {
			"affected": [
				{
					"defaultStatus": "unaffected",
					"product": "Linux",
					"programFiles": [
						"net/core/sock_map.c"
					],
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"vendor": "Linux",
					"versions": [
						{
							"lessThan": "f7990498b05a",
							"status": "affected",
							"version": "604326b41a6f",
							"versionType": "git"
						},
						{
							"lessThan": "dd54b48db0c8",
							"status": "affected",
							"version": "604326b41a6f",
							"versionType": "git"
						},
						{
							"lessThan": "d1e73fb19a4c",
							"status": "affected",
							"version": "604326b41a6f",
							"versionType": "git"
						},
						{
							"lessThan": "a44770fed865",
							"status": "affected",
							"version": "604326b41a6f",
							"versionType": "git"
						},
						{
							"lessThan": "668b3074aa14",
							"status": "affected",
							"version": "604326b41a6f",
							"versionType": "git"
						},
						{
							"lessThan": "6af057ccdd8e",
							"status": "affected",
							"version": "604326b41a6f",
							"versionType": "git"
						},
						{
							"lessThan": "ff9105993240",
							"status": "affected",
							"version": "604326b41a6f",
							"versionType": "git"
						}
					]
				},
				{
					"defaultStatus": "affected",
					"product": "Linux",
					"programFiles": [
						"net/core/sock_map.c"
					],
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"vendor": "Linux",
					"versions": [
						{
							"status": "affected",
							"version": "4.20"
						},
						{
							"lessThan": "4.20",
							"status": "unaffected",
							"version": "0",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.4.*",
							"status": "unaffected",
							"version": "5.4.274",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.10.*",
							"status": "unaffected",
							"version": "5.10.215",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.15.*",
							"status": "unaffected",
							"version": "5.15.154",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "6.1.*",
							"status": "unaffected",
							"version": "6.1.85",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "6.6.*",
							"status": "unaffected",
							"version": "6.6.26",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "6.8.*",
							"status": "unaffected",
							"version": "6.8.5",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "*",
							"status": "unaffected",
							"version": "6.9",
							"versionType": "original_commit_for_fix"
						}
					]
				}
			],
			"descriptions": [
				{
					"lang": "en",
					"value": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf, sockmap: Prevent lock inversion deadlock in map delete elem\n\nsyzkaller started using corpuses where a BPF tracing program deletes\nelements from a sockmap/sockhash map. Because BPF tracing programs can be\ninvoked from any interrupt context, locks taken during a map_delete_elem\noperation must be hardirq-safe. Otherwise a deadlock due to lock inversion\nis possible, as reported by lockdep:\n\n       CPU0                    CPU1\n       ----                    ----\n  lock(&htab->buckets[i].lock);\n                               local_irq_disable();\n                               lock(&host->lock);\n                               lock(&htab->buckets[i].lock);\n  <Interrupt>\n    lock(&host->lock);\n\nLocks in sockmap are hardirq-unsafe by design. We expects elements to be\ndeleted from sockmap/sockhash only in task (normal) context with interrupts\nenabled, or in softirq context.\n\nDetect when map_delete_elem operation is invoked from a context which is\n_not_ hardirq-unsafe, that is interrupts are disabled, and bail out with an\nerror.\n\nNote that map updates are not affected by this issue. BPF verifier does not\nallow updating sockmap/sockhash from a BPF tracing program today."
				}
			],
			"providerMetadata": {
				"dateUpdated": "2024-05-29T05:30:51.843Z",
				"orgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
				"shortName": "Linux"
			},
			"references": [
				{
					"url": "https://git.kernel.org/stable/c/f7990498b05ac41f7d6a190dc0418ef1d21bf058"
				},
				{
					"url": "https://git.kernel.org/stable/c/dd54b48db0c822ae7b520bc80751f0a0a173ef75"
				},
				{
					"url": "https://git.kernel.org/stable/c/d1e73fb19a4c872d7a399ad3c66e8ca30e0875ec"
				},
				{
					"url": "https://git.kernel.org/stable/c/a44770fed86515eedb5a7c00b787f847ebb134a5"
				},
				{
					"url": "https://git.kernel.org/stable/c/668b3074aa14829e2ac2759799537a93b60fef86"
				},
				{
					"url": "https://git.kernel.org/stable/c/6af057ccdd8e7619960aca1f0428339f213b31cd"
				},
				{
					"url": "https://git.kernel.org/stable/c/ff91059932401894e6c86341915615c5eb0eca48"
				}
			],
			"title": "bpf, sockmap: Prevent lock inversion deadlock in map delete elem",
			"x_generator": {
				"engine": "bippy-a5840b7849dd"
			}
		}
	}
}
