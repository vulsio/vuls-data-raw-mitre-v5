{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.0",
	"cveMetadata": {
		"assignerOrgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
		"assignerShortName": "Linux",
		"cveId": "CVE-2024-26846",
		"datePublished": "2024-04-17T10:10:09.964Z",
		"dateReserved": "2024-02-19T14:20:24.182Z",
		"dateUpdated": "2024-04-17T10:10:09.964Z",
		"state": "PUBLISHED"
	},
	"containers": {
		"cna": {
			"affected": [
				{
					"defaultStatus": "unaffected",
					"product": "Linux",
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"vendor": "Linux",
					"versions": [
						{
							"lessThan": "4f2c95015ec2",
							"status": "affected",
							"version": "1da177e4c3f4",
							"versionType": "git"
						},
						{
							"lessThan": "0bf567d6d9ff",
							"status": "affected",
							"version": "1da177e4c3f4",
							"versionType": "git"
						},
						{
							"lessThan": "085195aa90a9",
							"status": "affected",
							"version": "1da177e4c3f4",
							"versionType": "git"
						},
						{
							"lessThan": "baa6b7eb8c66",
							"status": "affected",
							"version": "1da177e4c3f4",
							"versionType": "git"
						},
						{
							"lessThan": "c0882c366418",
							"status": "affected",
							"version": "1da177e4c3f4",
							"versionType": "git"
						},
						{
							"lessThan": "70fbfc47a392",
							"status": "affected",
							"version": "1da177e4c3f4",
							"versionType": "git"
						}
					]
				},
				{
					"defaultStatus": "affected",
					"product": "Linux",
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"vendor": "Linux",
					"versions": [
						{
							"lessThanOrEqual": "5.10.*",
							"status": "unaffected",
							"version": "5.10.211",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.15.*",
							"status": "unaffected",
							"version": "5.15.150",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "6.1.*",
							"status": "unaffected",
							"version": "6.1.80",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "6.6.*",
							"status": "unaffected",
							"version": "6.6.19",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "6.7.*",
							"status": "unaffected",
							"version": "6.7.7",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "*",
							"status": "unaffected",
							"version": "6.8",
							"versionType": "original_commit_for_fix"
						}
					]
				}
			],
			"descriptions": [
				{
					"lang": "en",
					"value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvme-fc: do not wait in vain when unloading module\n\nThe module exit path has race between deleting all controllers and\nfreeing 'left over IDs'. To prevent double free a synchronization\nbetween nvme_delete_ctrl and ida_destroy has been added by the initial\ncommit.\n\nThere is some logic around trying to prevent from hanging forever in\nwait_for_completion, though it does not handling all cases. E.g.\nblktests is able to reproduce the situation where the module unload\nhangs forever.\n\nIf we completely rely on the cleanup code executed from the\nnvme_delete_ctrl path, all IDs will be freed eventually. This makes\ncalling ida_destroy unnecessary. We only have to ensure that all\nnvme_delete_ctrl code has been executed before we leave\nnvme_fc_exit_module. This is done by flushing the nvme_delete_wq\nworkqueue.\n\nWhile at it, remove the unused nvme_fc_wq workqueue too."
				}
			],
			"providerMetadata": {
				"dateUpdated": "2024-04-17T10:10:09.964Z",
				"orgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
				"shortName": "Linux"
			},
			"references": [
				{
					"url": "https://git.kernel.org/stable/c/4f2c95015ec2a1899161be6c0bdaecedd5a7bfb2"
				},
				{
					"url": "https://git.kernel.org/stable/c/0bf567d6d9ffe09e059bbdfb4d07143cef42c75c"
				},
				{
					"url": "https://git.kernel.org/stable/c/085195aa90a924c79e35569bcdad860d764a8e17"
				},
				{
					"url": "https://git.kernel.org/stable/c/baa6b7eb8c66486bd64608adc63fe03b30d3c0b9"
				},
				{
					"url": "https://git.kernel.org/stable/c/c0882c366418bf9c19e1ba7f270fe377a9bf5d67"
				},
				{
					"url": "https://git.kernel.org/stable/c/70fbfc47a392b98e5f8dba70c6efc6839205c982"
				}
			],
			"title": "nvme-fc: do not wait in vain when unloading module",
			"x_generator": {
				"engine": "bippy-d175d3acf727"
			}
		}
	}
}
