{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.0",
	"cveMetadata": {
		"assignerOrgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
		"assignerShortName": "Linux",
		"cveId": "CVE-2024-26956",
		"datePublished": "2024-05-01T05:18:56.101Z",
		"dateReserved": "2024-02-19T14:20:24.200Z",
		"dateUpdated": "2024-05-01T05:18:56.101Z",
		"state": "PUBLISHED"
	},
	"containers": {
		"cna": {
			"affected": [
				{
					"defaultStatus": "unaffected",
					"product": "Linux",
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"vendor": "Linux",
					"versions": [
						{
							"lessThan": "b67189690eb4",
							"status": "affected",
							"version": "c3a7abf06ce7",
							"versionType": "git"
						},
						{
							"lessThan": "9cbe1ad5f435",
							"status": "affected",
							"version": "c3a7abf06ce7",
							"versionType": "git"
						},
						{
							"lessThan": "c3b5c5c31e72",
							"status": "affected",
							"version": "c3a7abf06ce7",
							"versionType": "git"
						},
						{
							"lessThan": "2e2619ff5d0d",
							"status": "affected",
							"version": "c3a7abf06ce7",
							"versionType": "git"
						},
						{
							"lessThan": "46b832e09d43",
							"status": "affected",
							"version": "c3a7abf06ce7",
							"versionType": "git"
						},
						{
							"lessThan": "f69e81396aea",
							"status": "affected",
							"version": "c3a7abf06ce7",
							"versionType": "git"
						},
						{
							"lessThan": "a8e4d098de1c",
							"status": "affected",
							"version": "c3a7abf06ce7",
							"versionType": "git"
						},
						{
							"lessThan": "82827ca21e7c",
							"status": "affected",
							"version": "c3a7abf06ce7",
							"versionType": "git"
						},
						{
							"lessThan": "f2f26b4a84a0",
							"status": "affected",
							"version": "c3a7abf06ce7",
							"versionType": "git"
						}
					]
				},
				{
					"defaultStatus": "affected",
					"product": "Linux",
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"vendor": "Linux",
					"versions": [
						{
							"status": "affected",
							"version": "2.6.31"
						},
						{
							"lessThan": "2.6.31",
							"status": "unaffected",
							"version": "0",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "4.19.*",
							"status": "unaffected",
							"version": "4.19.312",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.4.*",
							"status": "unaffected",
							"version": "5.4.274",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.10.*",
							"status": "unaffected",
							"version": "5.10.215",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.15.*",
							"status": "unaffected",
							"version": "5.15.154",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "6.1.*",
							"status": "unaffected",
							"version": "6.1.84",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "6.6.*",
							"status": "unaffected",
							"version": "6.6.24",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "6.7.*",
							"status": "unaffected",
							"version": "6.7.12",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "6.8.*",
							"status": "unaffected",
							"version": "6.8.3",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "*",
							"status": "unaffected",
							"version": "6.9-rc1",
							"versionType": "original_commit_for_fix"
						}
					]
				}
			],
			"descriptions": [
				{
					"lang": "en",
					"value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix failure to detect DAT corruption in btree and direct mappings\n\nPatch series \"nilfs2: fix kernel bug at submit_bh_wbc()\".\n\nThis resolves a kernel BUG reported by syzbot.  Since there are two\nflaws involved, I've made each one a separate patch.\n\nThe first patch alone resolves the syzbot-reported bug, but I think\nboth fixes should be sent to stable, so I've tagged them as such.\n\n\nThis patch (of 2):\n\nSyzbot has reported a kernel bug in submit_bh_wbc() when writing file data\nto a nilfs2 file system whose metadata is corrupted.\n\nThere are two flaws involved in this issue.\n\nThe first flaw is that when nilfs_get_block() locates a data block using\nbtree or direct mapping, if the disk address translation routine\nnilfs_dat_translate() fails with internal code -ENOENT due to DAT metadata\ncorruption, it can be passed back to nilfs_get_block().  This causes\nnilfs_get_block() to misidentify an existing block as non-existent,\ncausing both data block lookup and insertion to fail inconsistently.\n\nThe second flaw is that nilfs_get_block() returns a successful status in\nthis inconsistent state.  This causes the caller __block_write_begin_int()\nor others to request a read even though the buffer is not mapped,\nresulting in a BUG_ON check for the BH_Mapped flag in submit_bh_wbc()\nfailing.\n\nThis fixes the first issue by changing the return value to code -EINVAL\nwhen a conversion using DAT fails with code -ENOENT, avoiding the\nconflicting condition that leads to the kernel bug described above.  Here,\ncode -EINVAL indicates that metadata corruption was detected during the\nblock lookup, which will be properly handled as a file system error and\nconverted to -EIO when passing through the nilfs2 bmap layer."
				}
			],
			"providerMetadata": {
				"dateUpdated": "2024-05-01T05:18:56.101Z",
				"orgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
				"shortName": "Linux"
			},
			"references": [
				{
					"url": "https://git.kernel.org/stable/c/b67189690eb4b7ecc84ae16fa1e880e0123eaa35"
				},
				{
					"url": "https://git.kernel.org/stable/c/9cbe1ad5f4354f4df1445e5f4883983328cd6d8e"
				},
				{
					"url": "https://git.kernel.org/stable/c/c3b5c5c31e723b568f83d8cafab8629d9d830ffb"
				},
				{
					"url": "https://git.kernel.org/stable/c/2e2619ff5d0def4bb6c2037a32a6eaa28dd95c84"
				},
				{
					"url": "https://git.kernel.org/stable/c/46b832e09d43b394ac0f6d9485d2b1a06593f0b7"
				},
				{
					"url": "https://git.kernel.org/stable/c/f69e81396aea66304d214f175aa371f1b5578862"
				},
				{
					"url": "https://git.kernel.org/stable/c/a8e4d098de1c0f4c5c1f2ed4633a860f0da6d713"
				},
				{
					"url": "https://git.kernel.org/stable/c/82827ca21e7c8a91384c5baa656f78a5adfa4ab4"
				},
				{
					"url": "https://git.kernel.org/stable/c/f2f26b4a84a0ef41791bd2d70861c8eac748f4ba"
				}
			],
			"title": "nilfs2: fix failure to detect DAT corruption in btree and direct mappings",
			"x_generator": {
				"engine": "bippy-d175d3acf727"
			}
		}
	}
}
