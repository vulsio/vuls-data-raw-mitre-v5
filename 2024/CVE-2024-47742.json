{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.1",
	"cveMetadata": {
		"cveId": "CVE-2024-47742",
		"assignerOrgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
		"assignerShortName": "Linux",
		"state": "PUBLISHED",
		"datePublished": "2024-10-21T12:14:10.499Z",
		"dateUpdated": "2024-10-21T13:04:14.368Z",
		"dateReserved": "2024-09-30T16:00:12.959Z"
	},
	"containers": {
		"cna": {
			"providerMetadata": {
				"orgID": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
				"shortName": "Linux",
				"dateUpdated": "2024-10-21T12:14:10.499Z"
			},
			"title": "firmware_loader: Block path traversal",
			"descriptions": [
				{
					"lang": "en",
					"value": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware_loader: Block path traversal\n\nMost firmware names are hardcoded strings, or are constructed from fairly\nconstrained format strings where the dynamic parts are just some hex\nnumbers or such.\n\nHowever, there are a couple codepaths in the kernel where firmware file\nnames contain string components that are passed through from a device or\nsemi-privileged userspace; the ones I could find (not counting interfaces\nthat require root privileges) are:\n\n - lpfc_sli4_request_firmware_update() seems to construct the firmware\n   filename from \"ModelName\", a string that was previously parsed out of\n   some descriptor (\"Vital Product Data\") in lpfc_fill_vpd()\n - nfp_net_fw_find() seems to construct a firmware filename from a model\n   name coming from nfp_hwinfo_lookup(pf->hwinfo, \"nffw.partno\"), which I\n   think parses some descriptor that was read from the device.\n   (But this case likely isn't exploitable because the format string looks\n   like \"netronome/nic_%s\", and there shouldn't be any *folders* starting\n   with \"netronome/nic_\". The previous case was different because there,\n   the \"%s\" is *at the start* of the format string.)\n - module_flash_fw_schedule() is reachable from the\n   ETHTOOL_MSG_MODULE_FW_FLASH_ACT netlink command, which is marked as\n   GENL_UNS_ADMIN_PERM (meaning CAP_NET_ADMIN inside a user namespace is\n   enough to pass the privilege check), and takes a userspace-provided\n   firmware name.\n   (But I think to reach this case, you need to have CAP_NET_ADMIN over a\n   network namespace that a special kind of ethernet device is mapped into,\n   so I think this is not a viable attack path in practice.)\n\nFix it by rejecting any firmware names containing \"..\" path components.\n\nFor what it's worth, I went looking and haven't found any USB device\ndrivers that use the firmware loader dangerously."
				}
			],
			"affected": [
				{
					"vendor": "Linux",
					"product": "Linux",
					"programFiles": [
						"drivers/base/firmware_loader/main.c"
					],
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"defaultStatus": "unaffected",
					"versions": [
						{
							"status": "affected",
							"versionType": "git",
							"version": "abb139e75c2c",
							"lessThan": "c30558e6c5c9"
						},
						{
							"status": "affected",
							"versionType": "git",
							"version": "abb139e75c2c",
							"lessThan": "a77fc4acfd49"
						},
						{
							"status": "affected",
							"versionType": "git",
							"version": "abb139e75c2c",
							"lessThan": "3d2411f4edcb"
						},
						{
							"status": "affected",
							"versionType": "git",
							"version": "abb139e75c2c",
							"lessThan": "7420c1bf7fc7"
						},
						{
							"status": "affected",
							"versionType": "git",
							"version": "abb139e75c2c",
							"lessThan": "28f1cd94d3f1"
						},
						{
							"status": "affected",
							"versionType": "git",
							"version": "abb139e75c2c",
							"lessThan": "6c4e13fdfcab"
						},
						{
							"status": "affected",
							"versionType": "git",
							"version": "abb139e75c2c",
							"lessThan": "f0e5311aa802"
						}
					]
				},
				{
					"vendor": "Linux",
					"product": "Linux",
					"programFiles": [
						"drivers/base/firmware_loader/main.c"
					],
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"defaultStatus": "affected",
					"versions": [
						{
							"status": "affected",
							"version": "3.7"
						},
						{
							"status": "unaffected",
							"versionType": "custom",
							"version": "0",
							"lessThan": "3.7"
						},
						{
							"status": "unaffected",
							"versionType": "custom",
							"version": "5.10.227",
							"lessThanOrEqual": "5.10.*"
						},
						{
							"status": "unaffected",
							"versionType": "custom",
							"version": "5.15.168",
							"lessThanOrEqual": "5.15.*"
						},
						{
							"status": "unaffected",
							"versionType": "custom",
							"version": "6.1.113",
							"lessThanOrEqual": "6.1.*"
						},
						{
							"status": "unaffected",
							"versionType": "custom",
							"version": "6.6.54",
							"lessThanOrEqual": "6.6.*"
						},
						{
							"status": "unaffected",
							"versionType": "custom",
							"version": "6.10.13",
							"lessThanOrEqual": "6.10.*"
						},
						{
							"status": "unaffected",
							"versionType": "custom",
							"version": "6.11.2",
							"lessThanOrEqual": "6.11.*"
						},
						{
							"status": "unaffected",
							"versionType": "original_commit_for_fix",
							"version": "6.12-rc1",
							"lessThanOrEqual": "*"
						}
					]
				}
			],
			"references": [
				{
					"url": "https://git.kernel.org/stable/c/c30558e6c5c9ad6c86459d9acce1520ceeab9ea6"
				},
				{
					"url": "https://git.kernel.org/stable/c/a77fc4acfd49fc6076e565445b2bc5fdc3244da4"
				},
				{
					"url": "https://git.kernel.org/stable/c/3d2411f4edcb649eaf232160db459bb4770b5251"
				},
				{
					"url": "https://git.kernel.org/stable/c/7420c1bf7fc784e587b87329cc6dfa3dca537aa4"
				},
				{
					"url": "https://git.kernel.org/stable/c/28f1cd94d3f1092728fb775a0fe26c5f1ac2ebeb"
				},
				{
					"url": "https://git.kernel.org/stable/c/6c4e13fdfcab34811c3143a0a03c05fec4e870ec"
				},
				{
					"url": "https://git.kernel.org/stable/c/f0e5311aa8022107d63c54e2f03684ec097d1394"
				}
			],
			"x_generator": {
				"engine": "bippy-c9c4e1df01b2"
			}
		},
		"adp": [
			{
				"providerMetadata": {
					"orgID": "134c704f-9b21-4f2e-91b3-4a467353bcc0",
					"shortName": "CISA-ADP",
					"dateUpdated": "2024-10-21T13:04:14.368Z"
				},
				"title": "CISA ADP Vulnrichment",
				"metrics": [
					{
						"other": {
							"type": "ssvc",
							"content": {
								"id": "CVE-2024-47742",
								"options": [
									{
										"Exploitation": "none"
									},
									{
										"Automatable": "no"
									},
									{
										"Technical Impact": "partial"
									}
								],
								"role": "CISA Coordinator",
								"timestamp": "2024-10-21T12:59:04.060717Z",
								"version": "2.0.3"
							}
						}
					}
				]
			}
		]
	}
}
