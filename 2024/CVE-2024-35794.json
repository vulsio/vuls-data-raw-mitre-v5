{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.1",
	"cveMetadata": {
		"cveId": "CVE-2024-35794",
		"assignerOrgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
		"assignerShortName": "Linux",
		"state": "PUBLISHED",
		"datePublished": "2024-05-17T12:25:00.111Z",
		"dateUpdated": "2024-12-19T08:55:18.520Z",
		"dateReserved": "2024-05-17T12:19:12.339Z"
	},
	"containers": {
		"cna": {
			"providerMetadata": {
				"orgID": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
				"shortName": "Linux",
				"dateUpdated": "2024-12-19T08:55:18.520Z"
			},
			"title": "dm-raid: really frozen sync_thread during suspend",
			"descriptions": [
				{
					"lang": "en",
					"value": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm-raid: really frozen sync_thread during suspend\n\n1) commit f52f5c71f3d4 (\"md: fix stopping sync thread\") remove\n   MD_RECOVERY_FROZEN from __md_stop_writes() and doesn't realize that\n   dm-raid relies on __md_stop_writes() to frozen sync_thread\n   indirectly. Fix this problem by adding MD_RECOVERY_FROZEN in\n   md_stop_writes(), and since stop_sync_thread() is only used for\n   dm-raid in this case, also move stop_sync_thread() to\n   md_stop_writes().\n2) The flag MD_RECOVERY_FROZEN doesn't mean that sync thread is frozen,\n   it only prevent new sync_thread to start, and it can't stop the\n   running sync thread; In order to frozen sync_thread, after seting the\n   flag, stop_sync_thread() should be used.\n3) The flag MD_RECOVERY_FROZEN doesn't mean that writes are stopped, use\n   it as condition for md_stop_writes() in raid_postsuspend() doesn't\n   look correct. Consider that reentrant stop_sync_thread() do nothing,\n   always call md_stop_writes() in raid_postsuspend().\n4) raid_message can set/clear the flag MD_RECOVERY_FROZEN at anytime,\n   and if MD_RECOVERY_FROZEN is cleared while the array is suspended,\n   new sync_thread can start unexpected. Fix this by disallow\n   raid_message() to change sync_thread status during suspend.\n\nNote that after commit f52f5c71f3d4 (\"md: fix stopping sync thread\"), the\ntest shell/lvconvert-raid-reshape.sh start to hang in stop_sync_thread(),\nand with previous fixes, the test won't hang there anymore, however, the\ntest will still fail and complain that ext4 is corrupted. And with this\npatch, the test won't hang due to stop_sync_thread() or fail due to ext4\nis corrupted anymore. However, there is still a deadlock related to\ndm-raid456 that will be fixed in following patches."
				}
			],
			"affected": [
				{
					"vendor": "Linux",
					"product": "Linux",
					"programFiles": [
						"drivers/md/dm-raid.c",
						"drivers/md/md.c"
					],
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"defaultStatus": "unaffected",
					"versions": [
						{
							"status": "affected",
							"versionType": "git",
							"version": "9dbd1aa3a81c6166608fec87994b6c464701f73a",
							"lessThan": "af916cb66a80597f3523bc85812e790bcdcfd62b"
						},
						{
							"status": "affected",
							"versionType": "git",
							"version": "9dbd1aa3a81c6166608fec87994b6c464701f73a",
							"lessThan": "eaa8fc9b092837cf2c754bde1a15d784ce9a85ab"
						},
						{
							"status": "affected",
							"versionType": "git",
							"version": "9dbd1aa3a81c6166608fec87994b6c464701f73a",
							"lessThan": "16c4770c75b1223998adbeb7286f9a15c65fba73"
						}
					]
				},
				{
					"vendor": "Linux",
					"product": "Linux",
					"programFiles": [
						"drivers/md/dm-raid.c",
						"drivers/md/md.c"
					],
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"defaultStatus": "affected",
					"versions": [
						{
							"status": "affected",
							"version": "4.8"
						},
						{
							"status": "unaffected",
							"versionType": "semver",
							"version": "0",
							"lessThan": "4.8"
						},
						{
							"status": "unaffected",
							"versionType": "semver",
							"version": "6.7.12",
							"lessThanOrEqual": "6.7.*"
						},
						{
							"status": "unaffected",
							"versionType": "semver",
							"version": "6.8.3",
							"lessThanOrEqual": "6.8.*"
						},
						{
							"status": "unaffected",
							"versionType": "original_commit_for_fix",
							"version": "6.9",
							"lessThanOrEqual": "*"
						}
					]
				}
			],
			"references": [
				{
					"url": "https://git.kernel.org/stable/c/af916cb66a80597f3523bc85812e790bcdcfd62b"
				},
				{
					"url": "https://git.kernel.org/stable/c/eaa8fc9b092837cf2c754bde1a15d784ce9a85ab"
				},
				{
					"url": "https://git.kernel.org/stable/c/16c4770c75b1223998adbeb7286f9a15c65fba73"
				}
			],
			"x_generator": {
				"engine": "bippy-5f407fcff5a0"
			}
		},
		"adp": [
			{
				"providerMetadata": {
					"orgID": "134c704f-9b21-4f2e-91b3-4a467353bcc0",
					"shortName": "CISA-ADP",
					"dateUpdated": "2024-06-04T17:34:11.162Z"
				},
				"title": "CISA ADP Vulnrichment",
				"metrics": [
					{
						"other": {
							"type": "ssvc",
							"content": {
								"id": "CVE-2024-35794",
								"options": [
									{
										"Exploitation": "none"
									},
									{
										"Automatable": "no"
									},
									{
										"Technical Impact": "partial"
									}
								],
								"role": "CISA Coordinator",
								"timestamp": "2024-05-20T14:13:16.470118Z",
								"version": "2.0.3"
							}
						}
					}
				]
			},
			{
				"providerMetadata": {
					"orgID": "af854a3a-2127-422b-91ae-364da2661108",
					"shortName": "CVE",
					"dateUpdated": "2024-08-02T03:21:47.583Z"
				},
				"title": "CVE Program Container",
				"references": [
					{
						"tags": [
							"x_transferred"
						],
						"url": "https://git.kernel.org/stable/c/af916cb66a80597f3523bc85812e790bcdcfd62b"
					},
					{
						"tags": [
							"x_transferred"
						],
						"url": "https://git.kernel.org/stable/c/eaa8fc9b092837cf2c754bde1a15d784ce9a85ab"
					},
					{
						"tags": [
							"x_transferred"
						],
						"url": "https://git.kernel.org/stable/c/16c4770c75b1223998adbeb7286f9a15c65fba73"
					}
				]
			}
		]
	}
}
