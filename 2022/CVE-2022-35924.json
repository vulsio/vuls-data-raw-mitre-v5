{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.0",
	"cveMetadata": {
		"cveId": "CVE-2022-35924",
		"assignerOrgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
		"assignerShortName": "GitHub_M",
		"state": "PUBLISHED",
		"datePublished": "2022-08-02T17:55:13",
		"dateUpdated": "2022-08-02T17:55:13",
		"dateReserved": "2022-07-15T00:00:00"
	},
	"containers": {
		"cna": {
			"providerMetadata": {
				"orgID": "a0819718-46f1-4df5-94e2-005712e83aaa",
				"shortName": "GitHub_M",
				"dateUpdated": "2022-08-02T17:55:13"
			},
			"title": "Verification requests (magic link) sent to unwanted emails",
			"descriptions": [
				{
					"lang": "en",
					"value": "NextAuth.js is a complete open source authentication solution for Next.js applications. `next-auth` users who are using the `EmailProvider` either in versions before `4.10.3` or `3.29.10` are affected. If an attacker could forge a request that sent a comma-separated list of emails (eg.: `attacker@attacker.com,victim@victim.com`) to the sign-in endpoint, NextAuth.js would send emails to both the attacker and the victim's e-mail addresses. The attacker could then login as a newly created user with the email being `attacker@attacker.com,victim@victim.com`. This means that basic authorization like `email.endsWith(\"@victim.com\")` in the `signIn` callback would fail to communicate a threat to the developer and would let the attacker bypass authorization, even with an `@attacker.com` address. This vulnerability has been patched in `v4.10.3` and `v3.29.10` by normalizing the email value that is sent to the sign-in endpoint before accessing it anywhere else. We also added a `normalizeIdentifier` callback on the `EmailProvider` configuration, where you can further tweak your requirements for what your system considers a valid e-mail address. (E.g.: strict RFC2821 compliance). Users are advised to upgrade. There are no known workarounds for this vulnerability. If for some reason you cannot upgrade, you can normalize the incoming request using Advanced Initialization."
				}
			],
			"affected": [
				{
					"vendor": "nextauthjs",
					"product": "next-auth",
					"versions": [
						{
							"status": "affected",
							"version": ">= 4.0.0, < 4.10.3"
						},
						{
							"status": "affected",
							"version": "< 3.29.10"
						}
					]
				}
			],
			"problemTypes": [
				{
					"descriptions": [
						{
							"type": "CWE",
							"lang": "en",
							"description": "CWE-20: Improper Input Validation",
							"cweId": "CWE-20"
						}
					]
				}
			],
			"metrics": [
				{
					"cvssV3_1": {
						"version": "3.1",
						"vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
						"attackVector": "NETWORK",
						"attackComplexity": "LOW",
						"privilegesRequired": "NONE",
						"userInteraction": "NONE",
						"scope": "UNCHANGED",
						"confidentialityImpact": "HIGH",
						"integrityImpact": "HIGH",
						"availabilityImpact": "NONE",
						"baseScore": 9.1,
						"baseSeverity": "CRITICAL"
					}
				}
			],
			"references": [
				{
					"tags": [
						"x_refsource_MISC"
					],
					"url": "https://next-auth.js.org/configuration/initialization#advanced-initialization"
				},
				{
					"tags": [
						"x_refsource_CONFIRM"
					],
					"url": "https://github.com/nextauthjs/next-auth/security/advisories/GHSA-xv97-c62v-4587"
				},
				{
					"tags": [
						"x_refsource_MISC"
					],
					"url": "https://github.com/nextauthjs/next-auth/commit/afb1fcdae3cc30445038ef588e491d139b916003"
				},
				{
					"tags": [
						"x_refsource_MISC"
					],
					"url": "https://en.wikipedia.org/wiki/Email_address#Local-part"
				},
				{
					"tags": [
						"x_refsource_MISC"
					],
					"url": "https://next-auth.js.org/configuration/callbacks#sign-in-callback"
				},
				{
					"tags": [
						"x_refsource_MISC"
					],
					"url": "https://next-auth.js.org/providers/email"
				},
				{
					"tags": [
						"x_refsource_MISC"
					],
					"url": "https://next-auth.js.org/providers/email#normalizing-the-e-mail-address"
				},
				{
					"tags": [
						"x_refsource_MISC"
					],
					"url": "https://nodemailer.com/message/addresses"
				}
			],
			"source": {
				"advisory": "GHSA-xv97-c62v-4587",
				"discovery": "UNKNOWN"
			},
			"x_legacyV4Record": {
				"CVE_data_meta": {
					"ASSIGNER": "security-advisories@github.com",
					"ID": "CVE-2022-35924",
					"STATE": "PUBLIC",
					"TITLE": "Verification requests (magic link) sent to unwanted emails"
				},
				"affects": {
					"vendor": {
						"vendor_data": [
							{
								"product": {
									"product_data": [
										{
											"product_name": "next-auth",
											"version": {
												"version_data": [
													{
														"version_value": ">= 4.0.0, < 4.10.3"
													},
													{
														"version_value": "< 3.29.10"
													}
												]
											}
										}
									]
								},
								"vendor_name": "nextauthjs"
							}
						]
					}
				},
				"data_format": "MITRE",
				"data_type": "CVE",
				"data_version": "4.0",
				"description": {
					"description_data": [
						{
							"lang": "eng",
							"value": "NextAuth.js is a complete open source authentication solution for Next.js applications. `next-auth` users who are using the `EmailProvider` either in versions before `4.10.3` or `3.29.10` are affected. If an attacker could forge a request that sent a comma-separated list of emails (eg.: `attacker@attacker.com,victim@victim.com`) to the sign-in endpoint, NextAuth.js would send emails to both the attacker and the victim's e-mail addresses. The attacker could then login as a newly created user with the email being `attacker@attacker.com,victim@victim.com`. This means that basic authorization like `email.endsWith(\"@victim.com\")` in the `signIn` callback would fail to communicate a threat to the developer and would let the attacker bypass authorization, even with an `@attacker.com` address. This vulnerability has been patched in `v4.10.3` and `v3.29.10` by normalizing the email value that is sent to the sign-in endpoint before accessing it anywhere else. We also added a `normalizeIdentifier` callback on the `EmailProvider` configuration, where you can further tweak your requirements for what your system considers a valid e-mail address. (E.g.: strict RFC2821 compliance). Users are advised to upgrade. There are no known workarounds for this vulnerability. If for some reason you cannot upgrade, you can normalize the incoming request using Advanced Initialization."
						}
					]
				},
				"impact": {
					"cvss": {
						"attackComplexity": "LOW",
						"attackVector": "NETWORK",
						"availabilityImpact": "NONE",
						"baseScore": 9.1,
						"baseSeverity": "CRITICAL",
						"confidentialityImpact": "HIGH",
						"integrityImpact": "HIGH",
						"privilegesRequired": "NONE",
						"scope": "UNCHANGED",
						"userInteraction": "NONE",
						"vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
						"version": "3.1"
					}
				},
				"problemtype": {
					"problemtype_data": [
						{
							"description": [
								{
									"lang": "eng",
									"value": "CWE-20: Improper Input Validation"
								}
							]
						}
					]
				},
				"references": {
					"reference_data": [
						{
							"name": "https://next-auth.js.org/configuration/initialization#advanced-initialization",
							"refsource": "MISC",
							"url": "https://next-auth.js.org/configuration/initialization#advanced-initialization"
						},
						{
							"name": "https://github.com/nextauthjs/next-auth/security/advisories/GHSA-xv97-c62v-4587",
							"refsource": "CONFIRM",
							"url": "https://github.com/nextauthjs/next-auth/security/advisories/GHSA-xv97-c62v-4587"
						},
						{
							"name": "https://github.com/nextauthjs/next-auth/commit/afb1fcdae3cc30445038ef588e491d139b916003",
							"refsource": "MISC",
							"url": "https://github.com/nextauthjs/next-auth/commit/afb1fcdae3cc30445038ef588e491d139b916003"
						},
						{
							"name": "https://en.wikipedia.org/wiki/Email_address#Local-part",
							"refsource": "MISC",
							"url": "https://en.wikipedia.org/wiki/Email_address#Local-part"
						},
						{
							"name": "https://next-auth.js.org/configuration/callbacks#sign-in-callback",
							"refsource": "MISC",
							"url": "https://next-auth.js.org/configuration/callbacks#sign-in-callback"
						},
						{
							"name": "https://next-auth.js.org/providers/email",
							"refsource": "MISC",
							"url": "https://next-auth.js.org/providers/email"
						},
						{
							"name": "https://next-auth.js.org/providers/email#normalizing-the-e-mail-address",
							"refsource": "MISC",
							"url": "https://next-auth.js.org/providers/email#normalizing-the-e-mail-address"
						},
						{
							"name": "https://nodemailer.com/message/addresses",
							"refsource": "MISC",
							"url": "https://nodemailer.com/message/addresses"
						}
					]
				},
				"source": {
					"advisory": "GHSA-xv97-c62v-4587",
					"discovery": "UNKNOWN"
				}
			}
		}
	}
}
