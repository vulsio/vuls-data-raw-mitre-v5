{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.1",
	"cveMetadata": {
		"cveId": "CVE-2022-3252",
		"assignerOrgId": "e4a1ddda-f4f5-496e-96c8-82c37d06abd0",
		"assignerShortName": "Swift",
		"state": "PUBLISHED",
		"datePublished": "2022-09-21T18:45:16",
		"dateUpdated": "2024-08-03T01:07:05.521Z",
		"dateReserved": "2022-09-20T00:00:00"
	},
	"containers": {
		"cna": {
			"providerMetadata": {
				"orgID": "e4a1ddda-f4f5-496e-96c8-82c37d06abd0",
				"shortName": "Swift",
				"dateUpdated": "2022-09-21T18:45:16"
			},
			"descriptions": [
				{
					"lang": "en",
					"value": "Improper detection of complete HTTP body decompression SwiftNIO Extras provides a pair of helpers for transparently decompressing received HTTP request or response bodies. These two objects (HTTPRequestDecompressor and HTTPResponseDecompressor) both failed to detect when the decompressed body was considered complete. If trailing junk data was appended to the HTTP message body, the code would repeatedly attempt to decompress this data and fail. This would lead to an infinite loop making no forward progress, leading to livelock of the system and denial-of-service. This issue can be triggered by any attacker capable of sending a compressed HTTP message. Most commonly this is HTTP servers, as compressed HTTP messages cannot be negotiated for HTTP requests, but it is possible that users have configured decompression for HTTP requests as well. The attack is low effort, and likely to be reached without requiring any privilege or system access. The impact on availability is high: the process immediately becomes unavailable but does not immediately crash, meaning that it is possible for the process to remain in this state until an administrator intervenes or an automated circuit breaker fires. If left unchecked this issue will very slowly exhaust memory resources due to repeated buffer allocation, but the buffers are not written to and so it is possible that the processes will not terminate for quite some time. This risk can be mitigated by removing transparent HTTP message decompression. The issue is fixed by correctly detecting the termination of the compressed body as reported by zlib and refusing to decompress further data. The issue was found by Vojtech Rylko (https://github.com/vojtarylko) and reported publicly on GitHub."
				}
			],
			"affected": [
				{
					"vendor": "Swift Project",
					"product": "SwiftNIO Extras",
					"versions": [
						{
							"status": "affected",
							"versionType": "custom",
							"version": "unspecified",
							"lessThan": "1.14.0"
						}
					]
				}
			],
			"problemTypes": [
				{
					"descriptions": [
						{
							"type": "CWE",
							"lang": "en",
							"description": "CWE-606: Unchecked Input for Loop Condition",
							"cweId": "CWE-606"
						}
					]
				}
			],
			"references": [
				{
					"tags": [
						"x_refsource_MISC"
					],
					"url": "https://github.com/apple/swift-nio-extras/security/advisories/GHSA-773g-x274-8qmf"
				}
			],
			"x_legacyV4Record": {
				"CVE_data_meta": {
					"ASSIGNER": "cve@forums.swift.org",
					"ID": "CVE-2022-3252",
					"STATE": "PUBLIC"
				},
				"affects": {
					"vendor": {
						"vendor_data": [
							{
								"product": {
									"product_data": [
										{
											"product_name": "SwiftNIO Extras",
											"version": {
												"version_data": [
													{
														"version_affected": "<",
														"version_value": "1.14.0"
													}
												]
											}
										}
									]
								},
								"vendor_name": "Swift Project"
							}
						]
					}
				},
				"data_format": "MITRE",
				"data_type": "CVE",
				"data_version": "4.0",
				"description": {
					"description_data": [
						{
							"lang": "eng",
							"value": "Improper detection of complete HTTP body decompression SwiftNIO Extras provides a pair of helpers for transparently decompressing received HTTP request or response bodies. These two objects (HTTPRequestDecompressor and HTTPResponseDecompressor) both failed to detect when the decompressed body was considered complete. If trailing junk data was appended to the HTTP message body, the code would repeatedly attempt to decompress this data and fail. This would lead to an infinite loop making no forward progress, leading to livelock of the system and denial-of-service. This issue can be triggered by any attacker capable of sending a compressed HTTP message. Most commonly this is HTTP servers, as compressed HTTP messages cannot be negotiated for HTTP requests, but it is possible that users have configured decompression for HTTP requests as well. The attack is low effort, and likely to be reached without requiring any privilege or system access. The impact on availability is high: the process immediately becomes unavailable but does not immediately crash, meaning that it is possible for the process to remain in this state until an administrator intervenes or an automated circuit breaker fires. If left unchecked this issue will very slowly exhaust memory resources due to repeated buffer allocation, but the buffers are not written to and so it is possible that the processes will not terminate for quite some time. This risk can be mitigated by removing transparent HTTP message decompression. The issue is fixed by correctly detecting the termination of the compressed body as reported by zlib and refusing to decompress further data. The issue was found by Vojtech Rylko (https://github.com/vojtarylko) and reported publicly on GitHub."
						}
					]
				},
				"problemtype": {
					"problemtype_data": [
						{
							"description": [
								{
									"lang": "eng",
									"value": "CWE-606: Unchecked Input for Loop Condition"
								}
							]
						}
					]
				},
				"references": {
					"reference_data": [
						{
							"name": "https://github.com/apple/swift-nio-extras/security/advisories/GHSA-773g-x274-8qmf",
							"refsource": "MISC",
							"url": "https://github.com/apple/swift-nio-extras/security/advisories/GHSA-773g-x274-8qmf"
						}
					]
				}
			}
		},
		"adp": [
			{
				"providerMetadata": {
					"orgID": "af854a3a-2127-422b-91ae-364da2661108",
					"shortName": "CVE",
					"dateUpdated": "2024-08-03T01:07:05.521Z"
				},
				"title": "CVE Program Container",
				"references": [
					{
						"tags": [
							"x_refsource_MISC",
							"x_transferred"
						],
						"url": "https://github.com/apple/swift-nio-extras/security/advisories/GHSA-773g-x274-8qmf"
					}
				]
			}
		]
	}
}
