{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.0",
	"cveMetadata": {
		"cveId": "CVE-2022-36086",
		"assignerOrgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
		"assignerShortName": "GitHub_M",
		"state": "PUBLISHED",
		"datePublished": "2022-09-07T22:50:09",
		"dateUpdated": "2022-09-07T22:50:09",
		"dateReserved": "2022-07-15T00:00:00"
	},
	"containers": {
		"cna": {
			"providerMetadata": {
				"orgID": "a0819718-46f1-4df5-94e2-005712e83aaa",
				"shortName": "GitHub_M",
				"dateUpdated": "2022-09-07T22:50:09"
			},
			"title": "linked_list_allocator vulnerable to out-of-bound writes on `Heap` initialization and `Heap::extend`",
			"descriptions": [
				{
					"lang": "en",
					"value": "linked_list_allocator is an allocator usable for no_std systems. Prior to version 0.10.2, the heap initialization methods were missing a minimum size check for the given heap size argument. This could lead to out-of-bound writes when a heap was initialized with a size smaller than `3 * size_of::<usize>` because of metadata write operations. This vulnerability impacts all the initialization functions on the `Heap` and `LockedHeap` types, including `Heap::new`, `Heap::init`, `Heap::init_from_slice`, and `LockedHeap::new`. It also affects multiple uses of the `Heap::extend` method. Version 0.10.2 contains a patch for the issue. As a workaround, ensure that the heap is only initialized with a size larger than `3 * size_of::<usize>` and that the `Heap::extend` method is only called with sizes larger than `2 * size_of::<usize>()`. Also, ensure that the total heap size is (and stays) a multiple of `2 * size_of::<usize>()`."
				}
			],
			"affected": [
				{
					"vendor": "rust-osdev",
					"product": "linked-list-allocator",
					"versions": [
						{
							"status": "affected",
							"version": "< 0.10.2"
						}
					]
				}
			],
			"problemTypes": [
				{
					"descriptions": [
						{
							"type": "CWE",
							"lang": "en",
							"description": "CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer",
							"cweId": "CWE-119"
						}
					]
				},
				{
					"descriptions": [
						{
							"type": "CWE",
							"lang": "en",
							"description": "CWE-787: Out-of-bounds Write",
							"cweId": "CWE-787"
						}
					]
				}
			],
			"metrics": [
				{
					"cvssV3_1": {
						"version": "3.1",
						"vectorString": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
						"attackVector": "LOCAL",
						"attackComplexity": "LOW",
						"privilegesRequired": "NONE",
						"userInteraction": "NONE",
						"scope": "UNCHANGED",
						"confidentialityImpact": "HIGH",
						"integrityImpact": "HIGH",
						"availabilityImpact": "HIGH",
						"baseScore": 8.4,
						"baseSeverity": "HIGH"
					}
				}
			],
			"references": [
				{
					"tags": [
						"x_refsource_CONFIRM"
					],
					"url": "https://github.com/rust-osdev/linked-list-allocator/security/advisories/GHSA-xg8p-34w2-j49j"
				},
				{
					"tags": [
						"x_refsource_MISC"
					],
					"url": "https://github.com/rust-osdev/linked-list-allocator/commit/013b0758643943e8df5b17bbb495460ff47e8bbf"
				}
			],
			"source": {
				"advisory": "GHSA-xg8p-34w2-j49j",
				"discovery": "UNKNOWN"
			},
			"x_legacyV4Record": {
				"CVE_data_meta": {
					"ASSIGNER": "security-advisories@github.com",
					"ID": "CVE-2022-36086",
					"STATE": "PUBLIC",
					"TITLE": "linked_list_allocator vulnerable to out-of-bound writes on `Heap` initialization and `Heap::extend`"
				},
				"affects": {
					"vendor": {
						"vendor_data": [
							{
								"product": {
									"product_data": [
										{
											"product_name": "linked-list-allocator",
											"version": {
												"version_data": [
													{
														"version_value": "< 0.10.2"
													}
												]
											}
										}
									]
								},
								"vendor_name": "rust-osdev"
							}
						]
					}
				},
				"data_format": "MITRE",
				"data_type": "CVE",
				"data_version": "4.0",
				"description": {
					"description_data": [
						{
							"lang": "eng",
							"value": "linked_list_allocator is an allocator usable for no_std systems. Prior to version 0.10.2, the heap initialization methods were missing a minimum size check for the given heap size argument. This could lead to out-of-bound writes when a heap was initialized with a size smaller than `3 * size_of::<usize>` because of metadata write operations. This vulnerability impacts all the initialization functions on the `Heap` and `LockedHeap` types, including `Heap::new`, `Heap::init`, `Heap::init_from_slice`, and `LockedHeap::new`. It also affects multiple uses of the `Heap::extend` method. Version 0.10.2 contains a patch for the issue. As a workaround, ensure that the heap is only initialized with a size larger than `3 * size_of::<usize>` and that the `Heap::extend` method is only called with sizes larger than `2 * size_of::<usize>()`. Also, ensure that the total heap size is (and stays) a multiple of `2 * size_of::<usize>()`."
						}
					]
				},
				"impact": {
					"cvss": {
						"attackComplexity": "LOW",
						"attackVector": "LOCAL",
						"availabilityImpact": "HIGH",
						"baseScore": 8.4,
						"baseSeverity": "HIGH",
						"confidentialityImpact": "HIGH",
						"integrityImpact": "HIGH",
						"privilegesRequired": "NONE",
						"scope": "UNCHANGED",
						"userInteraction": "NONE",
						"vectorString": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
						"version": "3.1"
					}
				},
				"problemtype": {
					"problemtype_data": [
						{
							"description": [
								{
									"lang": "eng",
									"value": "CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer"
								}
							]
						},
						{
							"description": [
								{
									"lang": "eng",
									"value": "CWE-787: Out-of-bounds Write"
								}
							]
						}
					]
				},
				"references": {
					"reference_data": [
						{
							"name": "https://github.com/rust-osdev/linked-list-allocator/security/advisories/GHSA-xg8p-34w2-j49j",
							"refsource": "CONFIRM",
							"url": "https://github.com/rust-osdev/linked-list-allocator/security/advisories/GHSA-xg8p-34w2-j49j"
						},
						{
							"name": "https://github.com/rust-osdev/linked-list-allocator/commit/013b0758643943e8df5b17bbb495460ff47e8bbf",
							"refsource": "MISC",
							"url": "https://github.com/rust-osdev/linked-list-allocator/commit/013b0758643943e8df5b17bbb495460ff47e8bbf"
						}
					]
				},
				"source": {
					"advisory": "GHSA-xg8p-34w2-j49j",
					"discovery": "UNKNOWN"
				}
			}
		}
	}
}
