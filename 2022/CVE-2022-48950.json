{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.1",
	"cveMetadata": {
		"cveId": "CVE-2022-48950",
		"assignerOrgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
		"assignerShortName": "Linux",
		"state": "PUBLISHED",
		"datePublished": "2024-10-21T20:05:38.440Z",
		"dateUpdated": "2024-10-22T13:28:40.788Z",
		"dateReserved": "2024-08-22T01:27:53.625Z"
	},
	"containers": {
		"cna": {
			"providerMetadata": {
				"orgID": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
				"shortName": "Linux",
				"dateUpdated": "2024-10-21T20:05:38.440Z"
			},
			"title": "perf: Fix perf_pending_task() UaF",
			"descriptions": [
				{
					"lang": "en",
					"value": "In the Linux kernel, the following vulnerability has been resolved:\n\nperf: Fix perf_pending_task() UaF\n\nPer syzbot it is possible for perf_pending_task() to run after the\nevent is free()'d. There are two related but distinct cases:\n\n - the task_work was already queued before destroying the event;\n - destroying the event itself queues the task_work.\n\nThe first cannot be solved using task_work_cancel() since\nperf_release() itself might be called from a task_work (____fput),\nwhich means the current->task_works list is already empty and\ntask_work_cancel() won't be able to find the perf_pending_task()\nentry.\n\nThe simplest alternative is extending the perf_event lifetime to cover\nthe task_work.\n\nThe second is just silly, queueing a task_work while you know the\nevent is going away makes no sense and is easily avoided by\nre-arranging how the event is marked STATE_DEAD and ensuring it goes\nthrough STATE_OFF on the way down."
				}
			],
			"affected": [
				{
					"vendor": "Linux",
					"product": "Linux",
					"programFiles": [
						"kernel/events/core.c"
					],
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"defaultStatus": "unaffected",
					"versions": [
						{
							"status": "affected",
							"versionType": "git",
							"version": "1da177e4c3f4",
							"lessThan": "8bffa95ac19f"
						},
						{
							"status": "affected",
							"versionType": "git",
							"version": "1da177e4c3f4",
							"lessThan": "78e1317a174e"
						},
						{
							"status": "affected",
							"versionType": "git",
							"version": "1da177e4c3f4",
							"lessThan": "517e6a301f34"
						}
					]
				},
				{
					"vendor": "Linux",
					"product": "Linux",
					"programFiles": [
						"kernel/events/core.c"
					],
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"defaultStatus": "affected",
					"versions": [
						{
							"status": "unaffected",
							"versionType": "custom",
							"version": "5.15.84",
							"lessThanOrEqual": "5.15.*"
						},
						{
							"status": "unaffected",
							"versionType": "custom",
							"version": "6.0.14",
							"lessThanOrEqual": "6.0.*"
						},
						{
							"status": "unaffected",
							"versionType": "original_commit_for_fix",
							"version": "6.1",
							"lessThanOrEqual": "*"
						}
					]
				}
			],
			"references": [
				{
					"url": "https://git.kernel.org/stable/c/8bffa95ac19ff27c8261904f89d36c7fcf215d59"
				},
				{
					"url": "https://git.kernel.org/stable/c/78e1317a174edbfd1182599bf76c092a2877672c"
				},
				{
					"url": "https://git.kernel.org/stable/c/517e6a301f34613bff24a8e35b5455884f2d83d8"
				}
			],
			"x_generator": {
				"engine": "bippy-c9c4e1df01b2"
			}
		},
		"adp": [
			{
				"providerMetadata": {
					"orgID": "134c704f-9b21-4f2e-91b3-4a467353bcc0",
					"shortName": "CISA-ADP",
					"dateUpdated": "2024-10-22T13:28:40.788Z"
				},
				"title": "CISA ADP Vulnrichment",
				"metrics": [
					{
						"other": {
							"type": "ssvc",
							"content": {
								"id": "CVE-2022-48950",
								"options": [
									{
										"Exploitation": "none"
									},
									{
										"Automatable": "no"
									},
									{
										"Technical Impact": "partial"
									}
								],
								"role": "CISA Coordinator",
								"timestamp": "2024-10-22T13:21:45.788376Z",
								"version": "2.0.3"
							}
						}
					}
				]
			}
		]
	}
}
