{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.0",
	"cveMetadata": {
		"cveId": "CVE-2021-24221",
		"assignerOrgId": "1bfdd5d7-9bf6-4a53-96ea-42e2716d7a81",
		"assignerShortName": "WPScan",
		"state": "PUBLISHED",
		"datePublished": "2021-04-12T14:03:25",
		"dateUpdated": "2021-04-12T14:03:25",
		"dateReserved": "2021-01-14T00:00:00"
	},
	"containers": {
		"cna": {
			"providerMetadata": {
				"orgID": "1bfdd5d7-9bf6-4a53-96ea-42e2716d7a81",
				"shortName": "WPScan",
				"dateUpdated": "2021-04-12T14:03:25"
			},
			"title": "Quiz And Survey Master < 7.1.12 - Authenticated SQL injection via shortcode",
			"descriptions": [
				{
					"lang": "en",
					"value": "The Quiz And Survey Master – Best Quiz, Exam and Survey Plugin for WordPress plugin before 7.1.12 did not sanitise the result_id GET parameter on pages with the [qsm_result] shortcode without id attribute, concatenating it in a SQL statement and leading to an SQL injection. The lowest role allowed to use this shortcode in post or pages being author, such user could gain unauthorised access to the DBMS. If the shortcode (without the id attribute) is embed on a public page or post, then unauthenticated users could exploit the injection."
				}
			],
			"affected": [
				{
					"vendor": "Unknown",
					"product": "Quiz And Survey Master – Best Quiz, Exam and Survey Plugin for WordPress",
					"versions": [
						{
							"status": "affected",
							"versionType": "custom",
							"version": "7.1.12",
							"lessThan": "7.1.12"
						}
					]
				}
			],
			"problemTypes": [
				{
					"descriptions": [
						{
							"type": "CWE",
							"lang": "en",
							"description": "CWE-89 SQL Injection",
							"cweId": "CWE-89"
						}
					]
				}
			],
			"references": [
				{
					"tags": [
						"x_refsource_CONFIRM"
					],
					"url": "https://wpscan.com/vulnerability/3b52b25c-82a1-41c7-83ac-92e244f7c5ab"
				},
				{
					"tags": [
						"x_refsource_MISC"
					],
					"url": "https://plugins.trac.wordpress.org/changeset/2479603/"
				}
			],
			"credits": [
				{
					"lang": "en",
					"value": "Nguyen Van Khanh - SunCSR (Sun* Cyber Security Research)"
				}
			],
			"source": {
				"discovery": "UNKNOWN"
			},
			"x_generator": "WPScan CVE Generator",
			"x_legacyV4Record": {
				"CVE_data_meta": {
					"ASSIGNER": "contact@wpscan.com",
					"ID": "CVE-2021-24221",
					"STATE": "PUBLIC",
					"TITLE": "Quiz And Survey Master < 7.1.12 - Authenticated SQL injection via shortcode"
				},
				"affects": {
					"vendor": {
						"vendor_data": [
							{
								"product": {
									"product_data": [
										{
											"product_name": "Quiz And Survey Master – Best Quiz, Exam and Survey Plugin for WordPress",
											"version": {
												"version_data": [
													{
														"version_affected": "<",
														"version_name": "7.1.12",
														"version_value": "7.1.12"
													}
												]
											}
										}
									]
								},
								"vendor_name": "Unknown"
							}
						]
					}
				},
				"credit": [
					{
						"lang": "eng",
						"value": "Nguyen Van Khanh - SunCSR (Sun* Cyber Security Research)"
					}
				],
				"data_format": "MITRE",
				"data_type": "CVE",
				"data_version": "4.0",
				"description": {
					"description_data": [
						{
							"lang": "eng",
							"value": "The Quiz And Survey Master – Best Quiz, Exam and Survey Plugin for WordPress plugin before 7.1.12 did not sanitise the result_id GET parameter on pages with the [qsm_result] shortcode without id attribute, concatenating it in a SQL statement and leading to an SQL injection. The lowest role allowed to use this shortcode in post or pages being author, such user could gain unauthorised access to the DBMS. If the shortcode (without the id attribute) is embed on a public page or post, then unauthenticated users could exploit the injection."
						}
					]
				},
				"generator": "WPScan CVE Generator",
				"problemtype": {
					"problemtype_data": [
						{
							"description": [
								{
									"lang": "eng",
									"value": "CWE-89 SQL Injection"
								}
							]
						}
					]
				},
				"references": {
					"reference_data": [
						{
							"name": "https://wpscan.com/vulnerability/3b52b25c-82a1-41c7-83ac-92e244f7c5ab",
							"refsource": "CONFIRM",
							"url": "https://wpscan.com/vulnerability/3b52b25c-82a1-41c7-83ac-92e244f7c5ab"
						},
						{
							"name": "https://plugins.trac.wordpress.org/changeset/2479603/",
							"refsource": "MISC",
							"url": "https://plugins.trac.wordpress.org/changeset/2479603/"
						}
					]
				},
				"source": {
					"discovery": "UNKNOWN"
				}
			}
		}
	}
}
