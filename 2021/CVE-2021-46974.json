{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.1",
	"cveMetadata": {
		"assignerOrgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
		"assignerShortName": "Linux",
		"cveId": "CVE-2021-46974",
		"datePublished": "2024-02-27T18:47:08.487Z",
		"dateReserved": "2024-02-27T18:42:55.944Z",
		"dateUpdated": "2024-05-29T04:59:50.768Z",
		"state": "PUBLISHED"
	},
	"containers": {
		"cna": {
			"affected": [
				{
					"defaultStatus": "unaffected",
					"product": "Linux",
					"programFiles": [
						"kernel/bpf/verifier.c"
					],
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"vendor": "Linux",
					"versions": [
						{
							"lessThan": "4d542ddb88fb",
							"status": "affected",
							"version": "ae03b6b1c880",
							"versionType": "git"
						},
						{
							"lessThan": "0e2dfdc74a7f",
							"status": "affected",
							"version": "f92a819b4cbe",
							"versionType": "git"
						},
						{
							"lessThan": "53e0db429b37",
							"status": "affected",
							"version": "979d63d50c0c",
							"versionType": "git"
						},
						{
							"lessThan": "2cfa537674cd",
							"status": "affected",
							"version": "979d63d50c0c",
							"versionType": "git"
						},
						{
							"lessThan": "6eba92a4d4be",
							"status": "affected",
							"version": "979d63d50c0c",
							"versionType": "git"
						},
						{
							"lessThan": "7cf64d8679ca",
							"status": "affected",
							"version": "979d63d50c0c",
							"versionType": "git"
						},
						{
							"lessThan": "b9b34ddbe207",
							"status": "affected",
							"version": "979d63d50c0c",
							"versionType": "git"
						}
					]
				},
				{
					"defaultStatus": "affected",
					"product": "Linux",
					"programFiles": [
						"kernel/bpf/verifier.c"
					],
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"vendor": "Linux",
					"versions": [
						{
							"status": "affected",
							"version": "5.0"
						},
						{
							"lessThan": "5.0",
							"status": "unaffected",
							"version": "0",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "4.14.*",
							"status": "unaffected",
							"version": "4.14.233",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "4.19.*",
							"status": "unaffected",
							"version": "4.19.190",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.4.*",
							"status": "unaffected",
							"version": "5.4.117",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.10.*",
							"status": "unaffected",
							"version": "5.10.35",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.11.*",
							"status": "unaffected",
							"version": "5.11.19",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.12.*",
							"status": "unaffected",
							"version": "5.12.2",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "*",
							"status": "unaffected",
							"version": "5.13",
							"versionType": "original_commit_for_fix"
						}
					]
				}
			],
			"descriptions": [
				{
					"lang": "en",
					"value": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix masking negation logic upon negative dst register\n\nThe negation logic for the case where the off_reg is sitting in the\ndst register is not correct given then we cannot just invert the add\nto a sub or vice versa. As a fix, perform the final bitwise and-op\nunconditionally into AX from the off_reg, then move the pointer from\nthe src to dst and finally use AX as the source for the original\npointer arithmetic operation such that the inversion yields a correct\nresult. The single non-AX mov in between is possible given constant\nblinding is retaining it as it's not an immediate based operation."
				}
			],
			"providerMetadata": {
				"dateUpdated": "2024-05-29T04:59:50.768Z",
				"orgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
				"shortName": "Linux"
			},
			"references": [
				{
					"url": "https://git.kernel.org/stable/c/4d542ddb88fb2f39bf7f14caa2902f3e8d06f6ba"
				},
				{
					"url": "https://git.kernel.org/stable/c/0e2dfdc74a7f4036127356d42ea59388f153f42c"
				},
				{
					"url": "https://git.kernel.org/stable/c/53e0db429b37a32b8fc706d0d90eb4583ad13848"
				},
				{
					"url": "https://git.kernel.org/stable/c/2cfa537674cd1051a3b8111536d77d0558f33d5d"
				},
				{
					"url": "https://git.kernel.org/stable/c/6eba92a4d4be8feb4dc33976abac544fa99d6ecc"
				},
				{
					"url": "https://git.kernel.org/stable/c/7cf64d8679ca1cb20cf57d6a88bfee79a0922a66"
				},
				{
					"url": "https://git.kernel.org/stable/c/b9b34ddbe2076ade359cd5ce7537d5ed019e9807"
				}
			],
			"title": "bpf: Fix masking negation logic upon negative dst register",
			"x_generator": {
				"engine": "bippy-a5840b7849dd"
			}
		}
	}
}
