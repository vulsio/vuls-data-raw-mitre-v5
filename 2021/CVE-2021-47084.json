{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.0",
	"cveMetadata": {
		"assignerOrgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
		"assignerShortName": "Linux",
		"cveId": "CVE-2021-47084",
		"datePublished": "2024-03-04T18:06:09.314Z",
		"dateReserved": "2024-02-29T22:33:44.298Z",
		"dateUpdated": "2024-03-04T18:06:23.211Z",
		"state": "PUBLISHED"
	},
	"containers": {
		"cna": {
			"affected": [
				{
					"defaultStatus": "unaffected",
					"product": "Linux",
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"vendor": "Linux",
					"versions": [
						{
							"lessThan": "b5b193d0c671",
							"status": "affected",
							"version": "1da177e4c3f4",
							"versionType": "git"
						},
						{
							"lessThan": "8a1a314965a1",
							"status": "affected",
							"version": "1da177e4c3f4",
							"versionType": "git"
						},
						{
							"lessThan": "eaa816a86e62",
							"status": "affected",
							"version": "1da177e4c3f4",
							"versionType": "git"
						},
						{
							"lessThan": "896193a02a29",
							"status": "affected",
							"version": "1da177e4c3f4",
							"versionType": "git"
						},
						{
							"lessThan": "ef5f7bfa19e3",
							"status": "affected",
							"version": "1da177e4c3f4",
							"versionType": "git"
						},
						{
							"lessThan": "450121075a6a",
							"status": "affected",
							"version": "1da177e4c3f4",
							"versionType": "git"
						},
						{
							"lessThan": "cb6c99aedd2c",
							"status": "affected",
							"version": "1da177e4c3f4",
							"versionType": "git"
						},
						{
							"lessThan": "3e0588c291d6",
							"status": "affected",
							"version": "1da177e4c3f4",
							"versionType": "git"
						}
					]
				},
				{
					"defaultStatus": "affected",
					"product": "Linux",
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"vendor": "Linux",
					"versions": [
						{
							"lessThanOrEqual": "4.4.*",
							"status": "unaffected",
							"version": "4.4.297",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "4.9.*",
							"status": "unaffected",
							"version": "4.9.295",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "4.14.*",
							"status": "unaffected",
							"version": "4.14.260",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "4.19.*",
							"status": "unaffected",
							"version": "4.19.223",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.4.*",
							"status": "unaffected",
							"version": "5.4.169",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.10.*",
							"status": "unaffected",
							"version": "5.10.89",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.15.*",
							"status": "unaffected",
							"version": "5.15.12",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "*",
							"status": "unaffected",
							"version": "5.16",
							"versionType": "original_commit_for_fix"
						}
					]
				}
			],
			"descriptions": [
				{
					"lang": "en",
					"value": "In the Linux kernel, the following vulnerability has been resolved:\n\nhamradio: defer ax25 kfree after unregister_netdev\n\nThere is a possible race condition (use-after-free) like below\n\n (USE)                       |  (FREE)\nax25_sendmsg                 |\n ax25_queue_xmit             |\n  dev_queue_xmit             |\n   __dev_queue_xmit          |\n    __dev_xmit_skb           |\n     sch_direct_xmit         | ...\n      xmit_one               |\n       netdev_start_xmit     | tty_ldisc_kill\n        __netdev_start_xmit  |  mkiss_close\n         ax_xmit             |   kfree\n          ax_encaps          |\n                             |\n\nEven though there are two synchronization primitives before the kfree:\n1. wait_for_completion(&ax->dead). This can prevent the race with\nroutines from mkiss_ioctl. However, it cannot stop the routine coming\nfrom upper layer, i.e., the ax25_sendmsg.\n\n2. netif_stop_queue(ax->dev). It seems that this line of code aims to\nhalt the transmit queue but it fails to stop the routine that already\nbeing xmit.\n\nThis patch reorder the kfree after the unregister_netdev to avoid the\npossible UAF as the unregister_netdev() is well synchronized and won't\nreturn if there is a running routine."
				}
			],
			"providerMetadata": {
				"dateUpdated": "2024-03-04T18:06:23.211Z",
				"orgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
				"shortName": "Linux"
			},
			"references": [
				{
					"url": "https://git.kernel.org/stable/c/b5b193d0c67180fefdc664650138e3b7959df615"
				},
				{
					"url": "https://git.kernel.org/stable/c/8a1a314965a17c62084a056b4f2cb7a770854c90"
				},
				{
					"url": "https://git.kernel.org/stable/c/eaa816a86e629cbcc0a94f38391fee09231628c7"
				},
				{
					"url": "https://git.kernel.org/stable/c/896193a02a2981e60c40d4614fd095ce92135ccd"
				},
				{
					"url": "https://git.kernel.org/stable/c/ef5f7bfa19e3fc366f4c6d1a841ceaddf7a9f5d4"
				},
				{
					"url": "https://git.kernel.org/stable/c/450121075a6a6f1d50f97225d3396315309d61a1"
				},
				{
					"url": "https://git.kernel.org/stable/c/cb6c99aedd2c843056a598a8907a6128cb07603b"
				},
				{
					"url": "https://git.kernel.org/stable/c/3e0588c291d6ce225f2b891753ca41d45ba42469"
				}
			],
			"title": "hamradio: defer ax25 kfree after unregister_netdev",
			"x_generator": {
				"engine": "bippy-4986f5686161"
			}
		}
	}
}
