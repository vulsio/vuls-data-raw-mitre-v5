{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.0",
	"cveMetadata": {
		"cveId": "CVE-2021-25641",
		"assignerOrgId": "f0158376-9dc2-43b6-827c-5f631a4d8d09",
		"assignerShortName": "apache",
		"state": "PUBLISHED",
		"datePublished": "2021-05-29T07:30:12",
		"dateUpdated": "2021-05-29T07:30:12",
		"dateReserved": "2021-01-20T00:00:00"
	},
	"containers": {
		"cna": {
			"providerMetadata": {
				"orgID": "f0158376-9dc2-43b6-827c-5f631a4d8d09",
				"shortName": "apache",
				"dateUpdated": "2021-05-29T07:30:12"
			},
			"title": "Dubbo Zookeeper does not check serialization id",
			"descriptions": [
				{
					"lang": "en",
					"value": "Each Apache Dubbo server will set a serialization id to tell the clients which serialization protocol it is working on. But for Dubbo versions before 2.7.8 or 2.6.9, an attacker can choose which serialization id the Provider will use by tampering with the byte preamble flags, aka, not following the server's instruction. This means that if a weak deserializer such as the Kryo and FST are somehow in code scope (e.g. if Kryo is somehow a part of a dependency), a remote unauthenticated attacker can tell the Provider to use the weak deserializer, and then proceed to exploit it."
				}
			],
			"affected": [
				{
					"vendor": "Apache Software Foundation",
					"product": "Apache Dubbo",
					"versions": [
						{
							"status": "affected",
							"versionType": "custom",
							"version": "Apache Dubbo 2.7.x",
							"lessThan": "2.7.8"
						},
						{
							"status": "affected",
							"versionType": "custom",
							"version": "Apache Dubbo 2.6.x",
							"lessThan": "2.6.9"
						}
					]
				}
			],
			"problemTypes": [
				{
					"descriptions": [
						{
							"type": "text",
							"lang": "en",
							"description": "Remote Code Execution by tempering the serialization id on server side."
						}
					]
				}
			],
			"references": [
				{
					"tags": [
						"x_refsource_MISC"
					],
					"url": "https://lists.apache.org/thread.html/r99ef7fa35585d3a68762de07e8d2b2bc48b8fa669a03e8d84b9673f3%40%3Cdev.dubbo.apache.org%3E"
				}
			],
			"source": {
				"discovery": "UNKNOWN"
			},
			"x_generator": {
				"engine": "Vulnogram 0.0.9"
			},
			"x_legacyV4Record": {
				"CVE_data_meta": {
					"AKA": "Serialization being tampered by attackers",
					"ASSIGNER": "security@apache.org",
					"ID": "CVE-2021-25641",
					"STATE": "PUBLIC",
					"TITLE": "Dubbo Zookeeper does not check serialization id"
				},
				"affects": {
					"vendor": {
						"vendor_data": [
							{
								"product": {
									"product_data": [
										{
											"product_name": "Apache Dubbo",
											"version": {
												"version_data": [
													{
														"version_affected": "<",
														"version_name": "Apache Dubbo 2.7.x",
														"version_value": "2.7.8"
													},
													{
														"version_affected": "<",
														"version_name": "Apache Dubbo 2.6.x",
														"version_value": "2.6.9"
													}
												]
											}
										}
									]
								},
								"vendor_name": "Apache Software Foundation"
							}
						]
					}
				},
				"data_format": "MITRE",
				"data_type": "CVE",
				"data_version": "4.0",
				"description": {
					"description_data": [
						{
							"lang": "eng",
							"value": "Each Apache Dubbo server will set a serialization id to tell the clients which serialization protocol it is working on. But for Dubbo versions before 2.7.8 or 2.6.9, an attacker can choose which serialization id the Provider will use by tampering with the byte preamble flags, aka, not following the server's instruction. This means that if a weak deserializer such as the Kryo and FST are somehow in code scope (e.g. if Kryo is somehow a part of a dependency), a remote unauthenticated attacker can tell the Provider to use the weak deserializer, and then proceed to exploit it."
						}
					]
				},
				"generator": {
					"engine": "Vulnogram 0.0.9"
				},
				"problemtype": {
					"problemtype_data": [
						{
							"description": [
								{
									"lang": "eng",
									"value": "Remote Code Execution by tempering the serialization id on server side."
								}
							]
						}
					]
				},
				"references": {
					"reference_data": [
						{
							"name": "https://lists.apache.org/thread.html/r99ef7fa35585d3a68762de07e8d2b2bc48b8fa669a03e8d84b9673f3%40%3Cdev.dubbo.apache.org%3E",
							"refsource": "MISC",
							"url": "https://lists.apache.org/thread.html/r99ef7fa35585d3a68762de07e8d2b2bc48b8fa669a03e8d84b9673f3%40%3Cdev.dubbo.apache.org%3E"
						}
					]
				},
				"source": {
					"discovery": "UNKNOWN"
				}
			}
		}
	}
}
