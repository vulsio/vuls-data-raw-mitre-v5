{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.1",
	"cveMetadata": {
		"cveId": "CVE-2021-29614",
		"assignerOrgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
		"assignerShortName": "GitHub_M",
		"state": "PUBLISHED",
		"datePublished": "2021-05-14T19:20:28",
		"dateUpdated": "2024-08-03T22:11:06.295Z",
		"dateReserved": "2021-03-30T00:00:00"
	},
	"containers": {
		"cna": {
			"providerMetadata": {
				"orgID": "a0819718-46f1-4df5-94e2-005712e83aaa",
				"shortName": "GitHub_M",
				"dateUpdated": "2021-05-14T19:20:28"
			},
			"title": "Interpreter crash from `tf.io.decode_raw`",
			"descriptions": [
				{
					"lang": "en",
					"value": "TensorFlow is an end-to-end open source platform for machine learning. The implementation of `tf.io.decode_raw` produces incorrect results and crashes the Python interpreter when combining `fixed_length` and wider datatypes. The implementation of the padded version(https://github.com/tensorflow/tensorflow/blob/1d8903e5b167ed0432077a3db6e462daf781d1fe/tensorflow/core/kernels/decode_padded_raw_op.cc) is buggy due to a confusion about pointer arithmetic rules. First, the code computes(https://github.com/tensorflow/tensorflow/blob/1d8903e5b167ed0432077a3db6e462daf781d1fe/tensorflow/core/kernels/decode_padded_raw_op.cc#L61) the width of each output element by dividing the `fixed_length` value to the size of the type argument. The `fixed_length` argument is also used to determine the size needed for the output tensor(https://github.com/tensorflow/tensorflow/blob/1d8903e5b167ed0432077a3db6e462daf781d1fe/tensorflow/core/kernels/decode_padded_raw_op.cc#L63-L79). This is followed by reencoding code(https://github.com/tensorflow/tensorflow/blob/1d8903e5b167ed0432077a3db6e462daf781d1fe/tensorflow/core/kernels/decode_padded_raw_op.cc#L85-L94). The erroneous code is the last line above: it is moving the `out_data` pointer by `fixed_length * sizeof(T)` bytes whereas it only copied at most `fixed_length` bytes from the input. This results in parts of the input not being decoded into the output. Furthermore, because the pointer advance is far wider than desired, this quickly leads to writing to outside the bounds of the backing data. This OOB write leads to interpreter crash in the reproducer mentioned here, but more severe attacks can be mounted too, given that this gadget allows writing to periodically placed locations in memory. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range."
				}
			],
			"affected": [
				{
					"vendor": "tensorflow",
					"product": "tensorflow",
					"versions": [
						{
							"status": "affected",
							"version": "< 2.1.4"
						},
						{
							"status": "affected",
							"version": ">= 2.2.0, < 2.2.3"
						},
						{
							"status": "affected",
							"version": ">= 2.3.0, < 2.3.3"
						},
						{
							"status": "affected",
							"version": ">= 2.4.0, < 2.4.2"
						}
					]
				}
			],
			"problemTypes": [
				{
					"descriptions": [
						{
							"type": "CWE",
							"lang": "en",
							"description": "CWE-665: Improper Initialization",
							"cweId": "CWE-665"
						}
					]
				}
			],
			"metrics": [
				{
					"cvssV3_1": {
						"version": "3.1",
						"vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:H",
						"attackVector": "LOCAL",
						"attackComplexity": "LOW",
						"privilegesRequired": "LOW",
						"userInteraction": "NONE",
						"scope": "UNCHANGED",
						"confidentialityImpact": "NONE",
						"integrityImpact": "HIGH",
						"availabilityImpact": "HIGH",
						"baseScore": 7.1,
						"baseSeverity": "HIGH"
					}
				}
			],
			"references": [
				{
					"tags": [
						"x_refsource_CONFIRM"
					],
					"url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-8pmx-p244-g88h"
				},
				{
					"tags": [
						"x_refsource_MISC"
					],
					"url": "https://github.com/tensorflow/tensorflow/commit/698e01511f62a3c185754db78ebce0eee1f0184d"
				}
			],
			"source": {
				"advisory": "GHSA-8pmx-p244-g88h",
				"discovery": "UNKNOWN"
			},
			"x_legacyV4Record": {
				"CVE_data_meta": {
					"ASSIGNER": "security-advisories@github.com",
					"ID": "CVE-2021-29614",
					"STATE": "PUBLIC",
					"TITLE": "Interpreter crash from `tf.io.decode_raw`"
				},
				"affects": {
					"vendor": {
						"vendor_data": [
							{
								"product": {
									"product_data": [
										{
											"product_name": "tensorflow",
											"version": {
												"version_data": [
													{
														"version_value": "< 2.1.4"
													},
													{
														"version_value": ">= 2.2.0, < 2.2.3"
													},
													{
														"version_value": ">= 2.3.0, < 2.3.3"
													},
													{
														"version_value": ">= 2.4.0, < 2.4.2"
													}
												]
											}
										}
									]
								},
								"vendor_name": "tensorflow"
							}
						]
					}
				},
				"data_format": "MITRE",
				"data_type": "CVE",
				"data_version": "4.0",
				"description": {
					"description_data": [
						{
							"lang": "eng",
							"value": "TensorFlow is an end-to-end open source platform for machine learning. The implementation of `tf.io.decode_raw` produces incorrect results and crashes the Python interpreter when combining `fixed_length` and wider datatypes. The implementation of the padded version(https://github.com/tensorflow/tensorflow/blob/1d8903e5b167ed0432077a3db6e462daf781d1fe/tensorflow/core/kernels/decode_padded_raw_op.cc) is buggy due to a confusion about pointer arithmetic rules. First, the code computes(https://github.com/tensorflow/tensorflow/blob/1d8903e5b167ed0432077a3db6e462daf781d1fe/tensorflow/core/kernels/decode_padded_raw_op.cc#L61) the width of each output element by dividing the `fixed_length` value to the size of the type argument. The `fixed_length` argument is also used to determine the size needed for the output tensor(https://github.com/tensorflow/tensorflow/blob/1d8903e5b167ed0432077a3db6e462daf781d1fe/tensorflow/core/kernels/decode_padded_raw_op.cc#L63-L79). This is followed by reencoding code(https://github.com/tensorflow/tensorflow/blob/1d8903e5b167ed0432077a3db6e462daf781d1fe/tensorflow/core/kernels/decode_padded_raw_op.cc#L85-L94). The erroneous code is the last line above: it is moving the `out_data` pointer by `fixed_length * sizeof(T)` bytes whereas it only copied at most `fixed_length` bytes from the input. This results in parts of the input not being decoded into the output. Furthermore, because the pointer advance is far wider than desired, this quickly leads to writing to outside the bounds of the backing data. This OOB write leads to interpreter crash in the reproducer mentioned here, but more severe attacks can be mounted too, given that this gadget allows writing to periodically placed locations in memory. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range."
						}
					]
				},
				"impact": {
					"cvss": {
						"attackComplexity": "LOW",
						"attackVector": "LOCAL",
						"availabilityImpact": "HIGH",
						"baseScore": 7.1,
						"baseSeverity": "HIGH",
						"confidentialityImpact": "NONE",
						"integrityImpact": "HIGH",
						"privilegesRequired": "LOW",
						"scope": "UNCHANGED",
						"userInteraction": "NONE",
						"vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:H",
						"version": "3.1"
					}
				},
				"problemtype": {
					"problemtype_data": [
						{
							"description": [
								{
									"lang": "eng",
									"value": "CWE-665: Improper Initialization"
								}
							]
						}
					]
				},
				"references": {
					"reference_data": [
						{
							"name": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-8pmx-p244-g88h",
							"refsource": "CONFIRM",
							"url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-8pmx-p244-g88h"
						},
						{
							"name": "https://github.com/tensorflow/tensorflow/commit/698e01511f62a3c185754db78ebce0eee1f0184d",
							"refsource": "MISC",
							"url": "https://github.com/tensorflow/tensorflow/commit/698e01511f62a3c185754db78ebce0eee1f0184d"
						}
					]
				},
				"source": {
					"advisory": "GHSA-8pmx-p244-g88h",
					"discovery": "UNKNOWN"
				}
			}
		},
		"adp": [
			{
				"providerMetadata": {
					"orgID": "af854a3a-2127-422b-91ae-364da2661108",
					"shortName": "CVE",
					"dateUpdated": "2024-08-03T22:11:06.295Z"
				},
				"title": "CVE Program Container",
				"references": [
					{
						"tags": [
							"x_refsource_CONFIRM",
							"x_transferred"
						],
						"url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-8pmx-p244-g88h"
					},
					{
						"tags": [
							"x_refsource_MISC",
							"x_transferred"
						],
						"url": "https://github.com/tensorflow/tensorflow/commit/698e01511f62a3c185754db78ebce0eee1f0184d"
					}
				]
			}
		]
	}
}
