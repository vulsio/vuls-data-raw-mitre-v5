{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.1",
	"cveMetadata": {
		"assignerOrgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
		"assignerShortName": "Linux",
		"cveId": "CVE-2021-46988",
		"datePublished": "2024-02-28T08:13:15.310Z",
		"dateReserved": "2024-02-27T18:42:55.948Z",
		"dateUpdated": "2024-05-28T19:35:29.563Z",
		"state": "PUBLISHED"
	},
	"containers": {
		"cna": {
			"affected": [
				{
					"defaultStatus": "unaffected",
					"product": "Linux",
					"programFiles": [
						"mm/shmem.c"
					],
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"vendor": "Linux",
					"versions": [
						{
							"lessThan": "319116227e52",
							"status": "affected",
							"version": "cb658a453b93",
							"versionType": "git"
						},
						{
							"lessThan": "07c9b834c97d",
							"status": "affected",
							"version": "cb658a453b93",
							"versionType": "git"
						},
						{
							"lessThan": "b3f1731c6d7f",
							"status": "affected",
							"version": "cb658a453b93",
							"versionType": "git"
						},
						{
							"lessThan": "140cfd998012",
							"status": "affected",
							"version": "cb658a453b93",
							"versionType": "git"
						},
						{
							"lessThan": "ad5312797303",
							"status": "affected",
							"version": "cb658a453b93",
							"versionType": "git"
						},
						{
							"lessThan": "2d59a0ed8b26",
							"status": "affected",
							"version": "cb658a453b93",
							"versionType": "git"
						},
						{
							"lessThan": "7ed9d238c7db",
							"status": "affected",
							"version": "cb658a453b93",
							"versionType": "git"
						}
					]
				},
				{
					"defaultStatus": "affected",
					"product": "Linux",
					"programFiles": [
						"mm/shmem.c"
					],
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"vendor": "Linux",
					"versions": [
						{
							"status": "affected",
							"version": "4.11"
						},
						{
							"lessThan": "4.11",
							"status": "unaffected",
							"version": "0",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "4.14.*",
							"status": "unaffected",
							"version": "4.14.233",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "4.19.*",
							"status": "unaffected",
							"version": "4.19.191",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.4.*",
							"status": "unaffected",
							"version": "5.4.120",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.10.*",
							"status": "unaffected",
							"version": "5.10.38",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.11.*",
							"status": "unaffected",
							"version": "5.11.22",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.12.*",
							"status": "unaffected",
							"version": "5.12.5",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "*",
							"status": "unaffected",
							"version": "5.13",
							"versionType": "original_commit_for_fix"
						}
					]
				}
			],
			"descriptions": [
				{
					"lang": "en",
					"value": "In the Linux kernel, the following vulnerability has been resolved:\n\nuserfaultfd: release page in error path to avoid BUG_ON\n\nConsider the following sequence of events:\n\n1. Userspace issues a UFFD ioctl, which ends up calling into\n   shmem_mfill_atomic_pte(). We successfully account the blocks, we\n   shmem_alloc_page(), but then the copy_from_user() fails. We return\n   -ENOENT. We don't release the page we allocated.\n2. Our caller detects this error code, tries the copy_from_user() after\n   dropping the mmap_lock, and retries, calling back into\n   shmem_mfill_atomic_pte().\n3. Meanwhile, let's say another process filled up the tmpfs being used.\n4. So shmem_mfill_atomic_pte() fails to account blocks this time, and\n   immediately returns - without releasing the page.\n\nThis triggers a BUG_ON in our caller, which asserts that the page\nshould always be consumed, unless -ENOENT is returned.\n\nTo fix this, detect if we have such a \"dangling\" page when accounting\nfails, and if so, release it before returning."
				}
			],
			"providerMetadata": {
				"dateUpdated": "2024-05-28T19:35:29.563Z",
				"orgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
				"shortName": "Linux"
			},
			"references": [
				{
					"url": "https://git.kernel.org/stable/c/319116227e52d49eee671f0aa278bac89b3c1b69"
				},
				{
					"url": "https://git.kernel.org/stable/c/07c9b834c97d0fa3402fb7f3f3b32df370a6ff1f"
				},
				{
					"url": "https://git.kernel.org/stable/c/b3f1731c6d7fbc1ebe3ed8eff6d6bec56d76ff43"
				},
				{
					"url": "https://git.kernel.org/stable/c/140cfd9980124aecb6c03ef2e69c72d0548744de"
				},
				{
					"url": "https://git.kernel.org/stable/c/ad53127973034c63b5348715a1043d0e80ceb330"
				},
				{
					"url": "https://git.kernel.org/stable/c/2d59a0ed8b26b8f3638d8afc31f839e27759f1f6"
				},
				{
					"url": "https://git.kernel.org/stable/c/7ed9d238c7dbb1fdb63ad96a6184985151b0171c"
				}
			],
			"title": "userfaultfd: release page in error path to avoid BUG_ON",
			"x_generator": {
				"engine": "bippy-a5840b7849dd"
			}
		}
	}
}
