{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.0",
	"cveMetadata": {
		"assignerOrgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
		"assignerShortName": "Linux",
		"cveId": "CVE-2021-46975",
		"datePublished": "2024-02-27T18:47:09.100Z",
		"dateReserved": "2024-02-27T18:42:55.944Z",
		"dateUpdated": "2024-02-27T18:47:09.100Z",
		"state": "PUBLISHED"
	},
	"containers": {
		"cna": {
			"affected": [
				{
					"defaultStatus": "unaffected",
					"product": "Linux",
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"vendor": "Linux",
					"versions": [
						{
							"lessThan": "da50f56e826e",
							"status": "affected",
							"version": "d0febd81ae77",
							"versionType": "git"
						},
						{
							"lessThan": "68122479c128",
							"status": "affected",
							"version": "d0febd81ae77",
							"versionType": "git"
						},
						{
							"lessThan": "9b288479f7a9",
							"status": "affected",
							"version": "d0febd81ae77",
							"versionType": "git"
						},
						{
							"lessThan": "baea536cf51f",
							"status": "affected",
							"version": "d0febd81ae77",
							"versionType": "git"
						},
						{
							"lessThan": "d3598eb3915c",
							"status": "affected",
							"version": "d0febd81ae77",
							"versionType": "git"
						},
						{
							"lessThan": "fbf85a34ce17",
							"status": "affected",
							"version": "d0febd81ae77",
							"versionType": "git"
						},
						{
							"lessThan": "671c54ea8c7f",
							"status": "affected",
							"version": "d0febd81ae77",
							"versionType": "git"
						},
						{
							"lessThan": "2671fa4dc010",
							"status": "affected",
							"version": "d0febd81ae77",
							"versionType": "git"
						}
					]
				},
				{
					"defaultStatus": "affected",
					"product": "Linux",
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"vendor": "Linux",
					"versions": [
						{
							"status": "affected",
							"version": "5.7"
						},
						{
							"lessThan": "5.7",
							"status": "unaffected",
							"version": "0",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "4.9.*",
							"status": "unaffected",
							"version": "4.9.269",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "4.14.*",
							"status": "unaffected",
							"version": "4.14.233",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "4.19.*",
							"status": "unaffected",
							"version": "4.19.191",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.4.*",
							"status": "unaffected",
							"version": "5.4.120",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.10.*",
							"status": "unaffected",
							"version": "5.10.35",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.11.*",
							"status": "unaffected",
							"version": "5.11.19",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.12.*",
							"status": "unaffected",
							"version": "5.12.2",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "*",
							"status": "unaffected",
							"version": "5.13",
							"versionType": "original_commit_for_fix"
						}
					]
				}
			],
			"descriptions": [
				{
					"lang": "en",
					"value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: conntrack: Make global sysctls readonly in non-init netns\n\nThese sysctls point to global variables:\n- NF_SYSCTL_CT_MAX (&nf_conntrack_max)\n- NF_SYSCTL_CT_EXPECT_MAX (&nf_ct_expect_max)\n- NF_SYSCTL_CT_BUCKETS (&nf_conntrack_htable_size_user)\n\nBecause their data pointers are not updated to point to per-netns\nstructures, they must be marked read-only in a non-init_net ns.\nOtherwise, changes in any net namespace are reflected in (leaked into)\nall other net namespaces. This problem has existed since the\nintroduction of net namespaces.\n\nThe current logic marks them read-only only if the net namespace is\nowned by an unprivileged user (other than init_user_ns).\n\nCommit d0febd81ae77 (\"netfilter: conntrack: re-visit sysctls in\nunprivileged namespaces\") \"exposes all sysctls even if the namespace is\nunpriviliged.\" Since we need to mark them readonly in any case, we can\nforego the unprivileged user check altogether."
				}
			],
			"providerMetadata": {
				"dateUpdated": "2024-02-27T18:47:09.100Z",
				"orgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
				"shortName": "Linux"
			},
			"references": [
				{
					"url": "https://git.kernel.org/stable/c/da50f56e826e1db141693297afb99370ebc160dd"
				},
				{
					"url": "https://git.kernel.org/stable/c/68122479c128a929f8f7bdd951cfdc8dd0e75b8f"
				},
				{
					"url": "https://git.kernel.org/stable/c/9b288479f7a901a14ce703938596438559d7df55"
				},
				{
					"url": "https://git.kernel.org/stable/c/baea536cf51f8180ab993e374cb134b5edad25e2"
				},
				{
					"url": "https://git.kernel.org/stable/c/d3598eb3915cc0c0d8cab42f4a6258ff44c4033e"
				},
				{
					"url": "https://git.kernel.org/stable/c/fbf85a34ce17c4cf0a37ee253f4c582bbfb8231b"
				},
				{
					"url": "https://git.kernel.org/stable/c/671c54ea8c7ff47bd88444f3fffb65bf9799ce43"
				},
				{
					"url": "https://git.kernel.org/stable/c/2671fa4dc0109d3fb581bc3078fdf17b5d9080f6"
				}
			],
			"title": "netfilter: conntrack: Make global sysctls readonly in non-init netns",
			"x_generator": {
				"engine": "bippy-b01c2a820106"
			}
		}
	}
}
