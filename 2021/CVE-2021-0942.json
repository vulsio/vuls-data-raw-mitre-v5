{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.1",
	"cveMetadata": {
		"cveId": "CVE-2021-0942",
		"assignerOrgId": "baff130e-b8d5-4e15-b3d3-c3cf5d5545c6",
		"assignerShortName": "google_android",
		"state": "PUBLISHED",
		"datePublished": "2022-09-13T19:13:39",
		"dateUpdated": "2024-08-03T15:55:17.580Z",
		"dateReserved": "2020-11-06T00:00:00"
	},
	"containers": {
		"cna": {
			"providerMetadata": {
				"orgID": "baff130e-b8d5-4e15-b3d3-c3cf5d5545c6",
				"shortName": "google_android",
				"dateUpdated": "2022-09-13T19:13:39"
			},
			"descriptions": [
				{
					"lang": "en",
					"value": "The path in this case is a little bit convoluted. The end result is that via an ioctl an untrusted app can control the ui32PageIndex offset in the expression:sPA.uiAddr = page_to_phys(psOSPageArrayData->pagearray[ui32PageIndex]);With the current PoC this crashes as an OOB read. However, given that the OOB read value is ending up as the address field of a struct I think i seems plausible that this could lead to an OOB write if the attacker is able to cause the OOB read to pull an interesting kernel address. Regardless if this is a read or write, it is a High severity issue in the kernel.Product: AndroidVersions: Android SoCAndroid ID: A-238904312"
				}
			],
			"affected": [
				{
					"vendor": "n/a",
					"product": "Android",
					"versions": [
						{
							"status": "affected",
							"version": "Android SoC"
						}
					]
				}
			],
			"problemTypes": [
				{
					"descriptions": [
						{
							"type": "text",
							"lang": "en",
							"description": "Elevation of privilege"
						}
					]
				}
			],
			"references": [
				{
					"tags": [
						"x_refsource_MISC"
					],
					"url": "https://source.android.com/security/bulletin/2022-09-01"
				}
			],
			"x_legacyV4Record": {
				"CVE_data_meta": {
					"ASSIGNER": "security@android.com",
					"ID": "CVE-2021-0942",
					"STATE": "PUBLIC"
				},
				"affects": {
					"vendor": {
						"vendor_data": [
							{
								"product": {
									"product_data": [
										{
											"product_name": "Android",
											"version": {
												"version_data": [
													{
														"version_value": "Android SoC"
													}
												]
											}
										}
									]
								},
								"vendor_name": "n/a"
							}
						]
					}
				},
				"data_format": "MITRE",
				"data_type": "CVE",
				"data_version": "4.0",
				"description": {
					"description_data": [
						{
							"lang": "eng",
							"value": "The path in this case is a little bit convoluted. The end result is that via an ioctl an untrusted app can control the ui32PageIndex offset in the expression:sPA.uiAddr = page_to_phys(psOSPageArrayData->pagearray[ui32PageIndex]);With the current PoC this crashes as an OOB read. However, given that the OOB read value is ending up as the address field of a struct I think i seems plausible that this could lead to an OOB write if the attacker is able to cause the OOB read to pull an interesting kernel address. Regardless if this is a read or write, it is a High severity issue in the kernel.Product: AndroidVersions: Android SoCAndroid ID: A-238904312"
						}
					]
				},
				"problemtype": {
					"problemtype_data": [
						{
							"description": [
								{
									"lang": "eng",
									"value": "Elevation of privilege"
								}
							]
						}
					]
				},
				"references": {
					"reference_data": [
						{
							"name": "https://source.android.com/security/bulletin/2022-09-01",
							"refsource": "MISC",
							"url": "https://source.android.com/security/bulletin/2022-09-01"
						}
					]
				}
			}
		},
		"adp": [
			{
				"providerMetadata": {
					"orgID": "af854a3a-2127-422b-91ae-364da2661108",
					"shortName": "CVE",
					"dateUpdated": "2024-08-03T15:55:17.580Z"
				},
				"title": "CVE Program Container",
				"references": [
					{
						"tags": [
							"x_refsource_MISC",
							"x_transferred"
						],
						"url": "https://source.android.com/security/bulletin/2022-09-01"
					}
				]
			}
		]
	}
}
