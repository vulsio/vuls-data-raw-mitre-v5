{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.1",
	"cveMetadata": {
		"assignerOrgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
		"assignerShortName": "Linux",
		"cveId": "CVE-2021-47368",
		"datePublished": "2024-05-21T15:03:34.494Z",
		"dateReserved": "2024-05-21T14:58:30.810Z",
		"dateUpdated": "2024-05-28T19:43:23.718Z",
		"state": "PUBLISHED"
	},
	"containers": {
		"cna": {
			"affected": [
				{
					"defaultStatus": "unaffected",
					"product": "Linux",
					"programFiles": [
						"drivers/net/ethernet/freescale/enetc/enetc.c"
					],
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"vendor": "Linux",
					"versions": [
						{
							"lessThan": "4c4c3052911b",
							"status": "affected",
							"version": "d4fd0404c1c9",
							"versionType": "git"
						},
						{
							"lessThan": "6c3f1b741c6c",
							"status": "affected",
							"version": "d4fd0404c1c9",
							"versionType": "git"
						},
						{
							"lessThan": "6f329d9da2a5",
							"status": "affected",
							"version": "d4fd0404c1c9",
							"versionType": "git"
						},
						{
							"lessThan": "7237a494decf",
							"status": "affected",
							"version": "d4fd0404c1c9",
							"versionType": "git"
						}
					]
				},
				{
					"defaultStatus": "affected",
					"product": "Linux",
					"programFiles": [
						"drivers/net/ethernet/freescale/enetc/enetc.c"
					],
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"vendor": "Linux",
					"versions": [
						{
							"status": "affected",
							"version": "5.1"
						},
						{
							"lessThan": "5.1",
							"status": "unaffected",
							"version": "0",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.4.*",
							"status": "unaffected",
							"version": "5.4.150",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.10.*",
							"status": "unaffected",
							"version": "5.10.70",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.14.*",
							"status": "unaffected",
							"version": "5.14.9",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "*",
							"status": "unaffected",
							"version": "5.15",
							"versionType": "original_commit_for_fix"
						}
					]
				}
			],
			"descriptions": [
				{
					"lang": "en",
					"value": "In the Linux kernel, the following vulnerability has been resolved:\n\nenetc: Fix illegal access when reading affinity_hint\n\nirq_set_affinity_hit() stores a reference to the cpumask_t\nparameter in the irq descriptor, and that reference can be\naccessed later from irq_affinity_hint_proc_show(). Since\nthe cpu_mask parameter passed to irq_set_affinity_hit() has\nonly temporary storage (it's on the stack memory), later\naccesses to it are illegal. Thus reads from the corresponding\nprocfs affinity_hint file can result in paging request oops.\n\nThe issue is fixed by the get_cpu_mask() helper, which provides\na permanent storage for the cpumask_t parameter."
				}
			],
			"providerMetadata": {
				"dateUpdated": "2024-05-28T19:43:23.718Z",
				"orgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
				"shortName": "Linux"
			},
			"references": [
				{
					"url": "https://git.kernel.org/stable/c/4c4c3052911b577920353a7646e4883d5da40c28"
				},
				{
					"url": "https://git.kernel.org/stable/c/6c3f1b741c6c2914ea120e3a5790d3e900152f7b"
				},
				{
					"url": "https://git.kernel.org/stable/c/6f329d9da2a5ae032fcde800a99b118124ed5270"
				},
				{
					"url": "https://git.kernel.org/stable/c/7237a494decfa17d0b9d0076e6cee3235719de90"
				}
			],
			"title": "enetc: Fix illegal access when reading affinity_hint",
			"x_generator": {
				"engine": "bippy-a5840b7849dd"
			}
		}
	}
}
