{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.1",
	"cveMetadata": {
		"assignerOrgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
		"assignerShortName": "Linux",
		"cveId": "CVE-2021-47416",
		"datePublished": "2024-05-21T15:04:06.042Z",
		"dateReserved": "2024-05-21T14:58:30.818Z",
		"dateUpdated": "2024-05-29T05:07:33.622Z",
		"state": "PUBLISHED"
	},
	"containers": {
		"cna": {
			"affected": [
				{
					"defaultStatus": "unaffected",
					"product": "Linux",
					"programFiles": [
						"drivers/net/phy/mdio_bus.c"
					],
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"vendor": "Linux",
					"versions": [
						{
							"lessThan": "25e9f88c7e3c",
							"status": "affected",
							"version": "46abc02175b3",
							"versionType": "git"
						},
						{
							"lessThan": "2250392d930b",
							"status": "affected",
							"version": "46abc02175b3",
							"versionType": "git"
						},
						{
							"lessThan": "f4f502a04ee1",
							"status": "affected",
							"version": "46abc02175b3",
							"versionType": "git"
						},
						{
							"lessThan": "2397b9e11872",
							"status": "affected",
							"version": "46abc02175b3",
							"versionType": "git"
						},
						{
							"lessThan": "414bb4ead136",
							"status": "affected",
							"version": "46abc02175b3",
							"versionType": "git"
						},
						{
							"lessThan": "0d2dd40a7be6",
							"status": "affected",
							"version": "46abc02175b3",
							"versionType": "git"
						},
						{
							"lessThan": "064c2616234a",
							"status": "affected",
							"version": "46abc02175b3",
							"versionType": "git"
						},
						{
							"lessThan": "ca6e11c337da",
							"status": "affected",
							"version": "46abc02175b3",
							"versionType": "git"
						}
					]
				},
				{
					"defaultStatus": "affected",
					"product": "Linux",
					"programFiles": [
						"drivers/net/phy/mdio_bus.c"
					],
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"vendor": "Linux",
					"versions": [
						{
							"status": "affected",
							"version": "2.6.28"
						},
						{
							"lessThan": "2.6.28",
							"status": "unaffected",
							"version": "0",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "4.4.*",
							"status": "unaffected",
							"version": "4.4.289",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "4.9.*",
							"status": "unaffected",
							"version": "4.9.287",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "4.14.*",
							"status": "unaffected",
							"version": "4.14.251",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "4.19.*",
							"status": "unaffected",
							"version": "4.19.211",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.4.*",
							"status": "unaffected",
							"version": "5.4.153",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.10.*",
							"status": "unaffected",
							"version": "5.10.73",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.14.*",
							"status": "unaffected",
							"version": "5.14.12",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "*",
							"status": "unaffected",
							"version": "5.15",
							"versionType": "original_commit_for_fix"
						}
					]
				}
			],
			"descriptions": [
				{
					"lang": "en",
					"value": "In the Linux kernel, the following vulnerability has been resolved:\n\nphy: mdio: fix memory leak\n\nSyzbot reported memory leak in MDIO bus interface, the problem was in\nwrong state logic.\n\nMDIOBUS_ALLOCATED indicates 2 states:\n\t1. Bus is only allocated\n\t2. Bus allocated and __mdiobus_register() fails, but\n\t   device_register() was called\n\nIn case of device_register() has been called we should call put_device()\nto correctly free the memory allocated for this device, but mdiobus_free()\ncalls just kfree(dev) in case of MDIOBUS_ALLOCATED state\n\nTo avoid this behaviour we need to set bus->state to MDIOBUS_UNREGISTERED\n_before_ calling device_register(), because put_device() should be\ncalled even in case of device_register() failure."
				}
			],
			"providerMetadata": {
				"dateUpdated": "2024-05-29T05:07:33.622Z",
				"orgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
				"shortName": "Linux"
			},
			"references": [
				{
					"url": "https://git.kernel.org/stable/c/25e9f88c7e3cc35f5e3d3db199660d28a15df639"
				},
				{
					"url": "https://git.kernel.org/stable/c/2250392d930bd0d989f24d355d6355b0150256e7"
				},
				{
					"url": "https://git.kernel.org/stable/c/f4f502a04ee1e543825af78f47eb7785015cd9f6"
				},
				{
					"url": "https://git.kernel.org/stable/c/2397b9e118721292429fea8807a698e71b94795f"
				},
				{
					"url": "https://git.kernel.org/stable/c/414bb4ead1362ef2c8592db723c017258f213988"
				},
				{
					"url": "https://git.kernel.org/stable/c/0d2dd40a7be61b89a7c99dae8ee96389d27b413a"
				},
				{
					"url": "https://git.kernel.org/stable/c/064c2616234a7394867c924b5c1303974f3a4f4d"
				},
				{
					"url": "https://git.kernel.org/stable/c/ca6e11c337daf7925ff8a2aac8e84490a8691905"
				}
			],
			"title": "phy: mdio: fix memory leak",
			"x_generator": {
				"engine": "bippy-a5840b7849dd"
			}
		}
	}
}
