{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.1",
	"cveMetadata": {
		"assignerOrgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
		"assignerShortName": "Linux",
		"cveId": "CVE-2021-47245",
		"datePublished": "2024-05-21T14:19:43.648Z",
		"dateReserved": "2024-04-10T18:59:19.533Z",
		"dateUpdated": "2024-05-28T19:40:49.892Z",
		"state": "PUBLISHED"
	},
	"containers": {
		"cna": {
			"affected": [
				{
					"defaultStatus": "unaffected",
					"product": "Linux",
					"programFiles": [
						"net/netfilter/nf_synproxy_core.c"
					],
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"vendor": "Linux",
					"versions": [
						{
							"lessThan": "e1eb98cfeafd",
							"status": "affected",
							"version": "48b1de4c110a",
							"versionType": "git"
						},
						{
							"lessThan": "576c1526b4d8",
							"status": "affected",
							"version": "48b1de4c110a",
							"versionType": "git"
						},
						{
							"lessThan": "674b5f0c6a4f",
							"status": "affected",
							"version": "48b1de4c110a",
							"versionType": "git"
						},
						{
							"lessThan": "7d9a9a1a88a3",
							"status": "affected",
							"version": "48b1de4c110a",
							"versionType": "git"
						},
						{
							"lessThan": "6defc77d48ef",
							"status": "affected",
							"version": "48b1de4c110a",
							"versionType": "git"
						},
						{
							"lessThan": "9cdf299ba4e1",
							"status": "affected",
							"version": "48b1de4c110a",
							"versionType": "git"
						},
						{
							"lessThan": "f648089337cb",
							"status": "affected",
							"version": "48b1de4c110a",
							"versionType": "git"
						},
						{
							"lessThan": "5fc177ab7594",
							"status": "affected",
							"version": "48b1de4c110a",
							"versionType": "git"
						}
					]
				},
				{
					"defaultStatus": "affected",
					"product": "Linux",
					"programFiles": [
						"net/netfilter/nf_synproxy_core.c"
					],
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"vendor": "Linux",
					"versions": [
						{
							"status": "affected",
							"version": "3.12"
						},
						{
							"lessThan": "3.12",
							"status": "unaffected",
							"version": "0",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "4.4.*",
							"status": "unaffected",
							"version": "4.4.274",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "4.9.*",
							"status": "unaffected",
							"version": "4.9.274",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "4.14.*",
							"status": "unaffected",
							"version": "4.14.238",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "4.19.*",
							"status": "unaffected",
							"version": "4.19.196",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.4.*",
							"status": "unaffected",
							"version": "5.4.128",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.10.*",
							"status": "unaffected",
							"version": "5.10.46",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "5.12.*",
							"status": "unaffected",
							"version": "5.12.13",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "*",
							"status": "unaffected",
							"version": "5.13",
							"versionType": "original_commit_for_fix"
						}
					]
				}
			],
			"descriptions": [
				{
					"lang": "en",
					"value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: synproxy: Fix out of bounds when parsing TCP options\n\nThe TCP option parser in synproxy (synproxy_parse_options) could read\none byte out of bounds. When the length is 1, the execution flow gets\ninto the loop, reads one byte of the opcode, and if the opcode is\nneither TCPOPT_EOL nor TCPOPT_NOP, it reads one more byte, which exceeds\nthe length of 1.\n\nThis fix is inspired by commit 9609dad263f8 (\"ipv4: tcp_input: fix stack\nout of bounds when parsing TCP options.\").\n\nv2 changes:\n\nAdded an early return when length < 0 to avoid calling\nskb_header_pointer with negative length."
				}
			],
			"providerMetadata": {
				"dateUpdated": "2024-05-28T19:40:49.892Z",
				"orgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
				"shortName": "Linux"
			},
			"references": [
				{
					"url": "https://git.kernel.org/stable/c/e1eb98cfeafdd85537e7e3cefe93ca9bfbcc3ea8"
				},
				{
					"url": "https://git.kernel.org/stable/c/576c1526b4d83c44ad7b673cb841f36cbc6cb6c4"
				},
				{
					"url": "https://git.kernel.org/stable/c/674b5f0c6a4fc5d3abce877048290cea6091fcb1"
				},
				{
					"url": "https://git.kernel.org/stable/c/7d9a9a1a88a3da574e019b4de756bc73337b3b0b"
				},
				{
					"url": "https://git.kernel.org/stable/c/6defc77d48eff74075b80ad5925061b2fc010d98"
				},
				{
					"url": "https://git.kernel.org/stable/c/9cdf299ba4e153b5e56187648420de22c6216f02"
				},
				{
					"url": "https://git.kernel.org/stable/c/f648089337cb8ed40b2bb96e244f72b9d97dc96b"
				},
				{
					"url": "https://git.kernel.org/stable/c/5fc177ab759418c9537433e63301096e733fb915"
				}
			],
			"title": "netfilter: synproxy: Fix out of bounds when parsing TCP options",
			"x_generator": {
				"engine": "bippy-a5840b7849dd"
			}
		}
	}
}
