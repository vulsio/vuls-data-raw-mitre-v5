{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.0",
	"cveMetadata": {
		"cveId": "CVE-2020-15254",
		"assignerOrgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
		"assignerShortName": "GitHub_M",
		"state": "PUBLISHED",
		"datePublished": "2020-10-16T17:05:24",
		"dateUpdated": "2020-10-16T17:05:23",
		"dateReserved": "2020-06-25T00:00:00"
	},
	"containers": {
		"cna": {
			"providerMetadata": {
				"orgID": "a0819718-46f1-4df5-94e2-005712e83aaa",
				"shortName": "GitHub_M",
				"dateUpdated": "2020-10-16T17:05:23"
			},
			"title": "Undefined Behavior in bounded Crossbeam channel",
			"descriptions": [
				{
					"lang": "en",
					"value": "Crossbeam is a set of tools for concurrent programming. In crossbeam-channel before version 0.4.4, the bounded channel incorrectly assumes that `Vec::from_iter` has allocated capacity that same as the number of iterator elements. `Vec::from_iter` does not actually guarantee that and may allocate extra memory. The destructor of the `bounded` channel reconstructs `Vec` from the raw pointer based on the incorrect assumes described above. This is unsound and causing deallocation with the incorrect capacity when `Vec::from_iter` has allocated different sizes with the number of iterator elements. This has been fixed in crossbeam-channel 0.4.4."
				}
			],
			"affected": [
				{
					"vendor": "crossbeam-rs",
					"product": "crossbeam",
					"versions": [
						{
							"status": "affected",
							"version": "< 0.4.4"
						}
					]
				}
			],
			"problemTypes": [
				{
					"descriptions": [
						{
							"type": "CWE",
							"lang": "en",
							"description": "{\"CWE-119\":\"Improper Restriction of Operations within the Bounds of a Memory Buffer\"}",
							"cweId": "CWE-119"
						}
					]
				}
			],
			"metrics": [
				{
					"cvssV3_1": {
						"version": "3.1",
						"vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
						"attackVector": "NETWORK",
						"attackComplexity": "HIGH",
						"privilegesRequired": "NONE",
						"userInteraction": "NONE",
						"scope": "UNCHANGED",
						"confidentialityImpact": "HIGH",
						"integrityImpact": "HIGH",
						"availabilityImpact": "HIGH",
						"baseScore": 8.1,
						"baseSeverity": "HIGH"
					}
				}
			],
			"references": [
				{
					"tags": [
						"x_refsource_CONFIRM"
					],
					"url": "https://github.com/crossbeam-rs/crossbeam/security/advisories/GHSA-v5m7-53cv-f3hx"
				},
				{
					"tags": [
						"x_refsource_MISC"
					],
					"url": "https://github.com/crossbeam-rs/crossbeam/issues/539"
				},
				{
					"tags": [
						"x_refsource_MISC"
					],
					"url": "https://github.com/crossbeam-rs/crossbeam/pull/533"
				},
				{
					"tags": [
						"x_refsource_MISC"
					],
					"url": "https://github.com/RustSec/advisory-db/pull/425"
				}
			],
			"source": {
				"advisory": "GHSA-v5m7-53cv-f3hx",
				"discovery": "UNKNOWN"
			},
			"x_legacyV4Record": {
				"CVE_data_meta": {
					"ASSIGNER": "security-advisories@github.com",
					"ID": "CVE-2020-15254",
					"STATE": "PUBLIC",
					"TITLE": "Undefined Behavior in bounded Crossbeam channel"
				},
				"affects": {
					"vendor": {
						"vendor_data": [
							{
								"product": {
									"product_data": [
										{
											"product_name": "crossbeam",
											"version": {
												"version_data": [
													{
														"version_value": "< 0.4.4"
													}
												]
											}
										}
									]
								},
								"vendor_name": "crossbeam-rs"
							}
						]
					}
				},
				"data_format": "MITRE",
				"data_type": "CVE",
				"data_version": "4.0",
				"description": {
					"description_data": [
						{
							"lang": "eng",
							"value": "Crossbeam is a set of tools for concurrent programming. In crossbeam-channel before version 0.4.4, the bounded channel incorrectly assumes that `Vec::from_iter` has allocated capacity that same as the number of iterator elements. `Vec::from_iter` does not actually guarantee that and may allocate extra memory. The destructor of the `bounded` channel reconstructs `Vec` from the raw pointer based on the incorrect assumes described above. This is unsound and causing deallocation with the incorrect capacity when `Vec::from_iter` has allocated different sizes with the number of iterator elements. This has been fixed in crossbeam-channel 0.4.4."
						}
					]
				},
				"impact": {
					"cvss": {
						"attackComplexity": "HIGH",
						"attackVector": "NETWORK",
						"availabilityImpact": "HIGH",
						"baseScore": 8.1,
						"baseSeverity": "HIGH",
						"confidentialityImpact": "HIGH",
						"integrityImpact": "HIGH",
						"privilegesRequired": "NONE",
						"scope": "UNCHANGED",
						"userInteraction": "NONE",
						"vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
						"version": "3.1"
					}
				},
				"problemtype": {
					"problemtype_data": [
						{
							"description": [
								{
									"lang": "eng",
									"value": "{\"CWE-119\":\"Improper Restriction of Operations within the Bounds of a Memory Buffer\"}"
								}
							]
						}
					]
				},
				"references": {
					"reference_data": [
						{
							"name": "https://github.com/crossbeam-rs/crossbeam/security/advisories/GHSA-v5m7-53cv-f3hx",
							"refsource": "CONFIRM",
							"url": "https://github.com/crossbeam-rs/crossbeam/security/advisories/GHSA-v5m7-53cv-f3hx"
						},
						{
							"name": "https://github.com/crossbeam-rs/crossbeam/issues/539",
							"refsource": "MISC",
							"url": "https://github.com/crossbeam-rs/crossbeam/issues/539"
						},
						{
							"name": "https://github.com/crossbeam-rs/crossbeam/pull/533",
							"refsource": "MISC",
							"url": "https://github.com/crossbeam-rs/crossbeam/pull/533"
						},
						{
							"name": "https://github.com/RustSec/advisory-db/pull/425",
							"refsource": "MISC",
							"url": "https://github.com/RustSec/advisory-db/pull/425"
						}
					]
				},
				"source": {
					"advisory": "GHSA-v5m7-53cv-f3hx",
					"discovery": "UNKNOWN"
				}
			}
		}
	}
}
