{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.0",
	"cveMetadata": {
		"cveId": "CVE-2023-36830",
		"assignerOrgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
		"assignerShortName": "GitHub_M",
		"state": "PUBLISHED",
		"datePublished": "2023-07-06T15:03:47.635Z",
		"dateUpdated": "2023-07-06T15:03:47.635Z",
		"dateReserved": "2023-06-27T15:43:18.388Z"
	},
	"containers": {
		"cna": {
			"providerMetadata": {
				"orgID": "a0819718-46f1-4df5-94e2-005712e83aaa",
				"shortName": "GitHub_M",
				"dateUpdated": "2023-07-06T15:03:47.635Z"
			},
			"title": "SQLFluff vulnerability for users with access to config file, using `library_path` to call arbitrary python code.",
			"descriptions": [
				{
					"lang": "en",
					"value": "SQLFluff is a SQL linter. Prior to version 2.1.2, in environments where untrusted users have access to the config files, there is a potential security vulnerability where those users could use the `library_path` config value to allow arbitrary python code to be executed via macros. For many users who use SQLFluff in the context of an environment where all users already have fairly escalated privileges, this may not be an issue - however in larger user bases, or where SQLFluff is bundled into another tool where developers still wish to give users access to supply their on rule configuration, this may be an issue.\n\nThe 2.1.2 release offers the ability for the `library_path` argument to be overwritten on the command line by using the `--library-path` option. This overrides any values provided in the config files and effectively prevents this route of attack for users which have access to the config file, but not to the scripts which call the SQLFluff CLI directly. A similar option is provided for the Python API, where users also have a greater ability to further customise or override configuration as necessary. Unless `library_path` is explicitly required, SQLFluff maintainers recommend using the option `--library-path none` when invoking SQLFluff which will disable the `library-path` option entirely regardless of the options set in the configuration file or via inline config directives. As a workaround, limiting access to - or otherwise validating configuration files before they are ingested by SQLFluff will provides a similar effect and does not require upgrade."
				}
			],
			"affected": [
				{
					"vendor": "sqlfluff",
					"product": "sqlfluff",
					"versions": [
						{
							"status": "affected",
							"version": "< 2.1.2"
						}
					]
				}
			],
			"problemTypes": [
				{
					"descriptions": [
						{
							"type": "CWE",
							"lang": "en",
							"description": "CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')",
							"cweId": "CWE-74"
						}
					]
				}
			],
			"metrics": [
				{
					"cvssV3_1": {
						"version": "3.1",
						"vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:L",
						"attackVector": "LOCAL",
						"attackComplexity": "LOW",
						"privilegesRequired": "LOW",
						"userInteraction": "NONE",
						"scope": "CHANGED",
						"confidentialityImpact": "LOW",
						"integrityImpact": "LOW",
						"availabilityImpact": "LOW",
						"baseScore": 6.3,
						"baseSeverity": "MEDIUM"
					}
				}
			],
			"references": [
				{
					"name": "https://github.com/sqlfluff/sqlfluff/security/advisories/GHSA-jqhc-m2j3-fjrx",
					"tags": [
						"x_refsource_CONFIRM"
					],
					"url": "https://github.com/sqlfluff/sqlfluff/security/advisories/GHSA-jqhc-m2j3-fjrx"
				},
				{
					"name": "https://github.com/sqlfluff/sqlfluff/releases/tag/2.1.2",
					"tags": [
						"x_refsource_MISC"
					],
					"url": "https://github.com/sqlfluff/sqlfluff/releases/tag/2.1.2"
				}
			],
			"source": {
				"advisory": "GHSA-jqhc-m2j3-fjrx",
				"discovery": "UNKNOWN"
			}
		}
	}
}
