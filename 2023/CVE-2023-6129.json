{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.1",
	"cveMetadata": {
		"cveId": "CVE-2023-6129",
		"assignerOrgId": "3a12439a-ef3a-4c79-92e6-6081a721f1e5",
		"assignerShortName": "openssl",
		"state": "PUBLISHED",
		"datePublished": "2024-01-09T16:36:58.860Z",
		"dateUpdated": "2024-08-02T08:21:17.314Z",
		"dateReserved": "2023-11-14T16:12:12.656Z"
	},
	"containers": {
		"cna": {
			"providerMetadata": {
				"orgID": "3a12439a-ef3a-4c79-92e6-6081a721f1e5",
				"shortName": "openssl",
				"dateUpdated": "2024-01-15T11:13:29.926Z"
			},
			"title": "POLY1305 MAC implementation corrupts vector registers on PowerPC",
			"descriptions": [
				{
					"lang": "en",
					"value": "Issue summary: The POLY1305 MAC (message authentication code) implementation\ncontains a bug that might corrupt the internal state of applications running\non PowerPC CPU based platforms if the CPU provides vector instructions.\n\nImpact summary: If an attacker can influence whether the POLY1305 MAC\nalgorithm is used, the application state might be corrupted with various\napplication dependent consequences.\n\nThe POLY1305 MAC (message authentication code) implementation in OpenSSL for\nPowerPC CPUs restores the contents of vector registers in a different order\nthan they are saved. Thus the contents of some of these vector registers\nare corrupted when returning to the caller. The vulnerable code is used only\non newer PowerPC processors supporting the PowerISA 2.07 instructions.\n\nThe consequences of this kind of internal application state corruption can\nbe various - from no consequences, if the calling application does not\ndepend on the contents of non-volatile XMM registers at all, to the worst\nconsequences, where the attacker could get complete control of the application\nprocess. However unless the compiler uses the vector registers for storing\npointers, the most likely consequence, if any, would be an incorrect result\nof some application dependent calculations or a crash leading to a denial of\nservice.\n\nThe POLY1305 MAC algorithm is most frequently used as part of the\nCHACHA20-POLY1305 AEAD (authenticated encryption with associated data)\nalgorithm. The most common usage of this AEAD cipher is with TLS protocol\nversions 1.2 and 1.3. If this cipher is enabled on the server a malicious\nclient can influence whether this AEAD cipher is used. This implies that\nTLS server applications using OpenSSL can be potentially impacted. However\nwe are currently not aware of any concrete application that would be affected\nby this issue therefore we consider this a Low severity security issue.",
					"supportingMedia": [
						{
							"type": "text/html",
							"base64": false,
							"value": "Issue summary: The POLY1305 MAC (message authentication code) implementation<br>contains a bug that might corrupt the internal state of applications running<br>on PowerPC CPU based platforms if the CPU provides vector instructions.<br><br>Impact summary: If an attacker can influence whether the POLY1305 MAC<br>algorithm is used, the application state might be corrupted with various<br>application dependent consequences.<br><br>The POLY1305 MAC (message authentication code) implementation in OpenSSL for<br>PowerPC CPUs restores the contents of vector registers in a different order<br>than they are saved. Thus the contents of some of these vector registers<br>are corrupted when returning to the caller. The vulnerable code is used only<br>on newer PowerPC processors supporting the PowerISA 2.07 instructions.<br><br>The consequences of this kind of internal application state corruption can<br>be various - from no consequences, if the calling application does not<br>depend on the contents of non-volatile XMM registers at all, to the worst<br>consequences, where the attacker could get complete control of the application<br>process. However unless the compiler uses the vector registers for storing<br>pointers, the most likely consequence, if any, would be an incorrect result<br>of some application dependent calculations or a crash leading to a denial of<br>service.<br><br>The POLY1305 MAC algorithm is most frequently used as part of the<br>CHACHA20-POLY1305 AEAD (authenticated encryption with associated data)<br>algorithm. The most common usage of this AEAD cipher is with TLS protocol<br>versions 1.2 and 1.3. If this cipher is enabled on the server a malicious<br>client can influence whether this AEAD cipher is used. This implies that<br>TLS server applications using OpenSSL can be potentially impacted. However<br>we are currently not aware of any concrete application that would be affected<br>by this issue therefore we consider this a Low severity security issue."
						}
					]
				}
			],
			"affected": [
				{
					"vendor": "OpenSSL",
					"product": "OpenSSL",
					"defaultStatus": "unaffected",
					"versions": [
						{
							"status": "affected",
							"versionType": "semver",
							"version": "3.2.0",
							"lessThan": "3.2.1"
						},
						{
							"status": "affected",
							"versionType": "semver",
							"version": "3.1.0",
							"lessThan": "3.1.5"
						},
						{
							"status": "affected",
							"versionType": "semver",
							"version": "3.0.0",
							"lessThan": "3.0.13"
						}
					]
				}
			],
			"problemTypes": [
				{
					"descriptions": [
						{
							"lang": "en",
							"description": "Passing Mutable Objects to an Untrusted Method"
						}
					]
				}
			],
			"metrics": [
				{
					"format": "other",
					"other": {
						"type": "https://www.openssl.org/policies/secpolicy.html",
						"content": {
							"text": "Low"
						}
					}
				}
			],
			"references": [
				{
					"name": "OpenSSL Advisory",
					"tags": [
						"vendor-advisory"
					],
					"url": "https://www.openssl.org/news/secadv/20240109.txt"
				},
				{
					"name": "3.2.1 git commit",
					"tags": [
						"patch"
					],
					"url": "https://github.com/openssl/openssl/commit/5b139f95c9a47a55a0c54100f3837b1eee942b04"
				},
				{
					"name": "3.1.5 git commit",
					"tags": [
						"patch"
					],
					"url": "https://github.com/openssl/openssl/commit/f3fc5808fe9ff74042d639839610d03b8fdcc015"
				},
				{
					"name": "3.0.13 git commit",
					"tags": [
						"patch"
					],
					"url": "https://github.com/openssl/openssl/commit/050d26383d4e264966fb83428e72d5d48f402d35"
				},
				{
					"url": "https://security.netapp.com/advisory/ntap-20240216-0009/"
				},
				{
					"url": "https://security.netapp.com/advisory/ntap-20240426-0013/"
				},
				{
					"url": "https://security.netapp.com/advisory/ntap-20240426-0008/"
				},
				{
					"url": "http://www.openwall.com/lists/oss-security/2024/03/11/1"
				},
				{
					"url": "https://security.netapp.com/advisory/ntap-20240503-0011/"
				}
			],
			"credits": [
				{
					"type": "finder",
					"lang": "en",
					"user": "00000000-0000-4000-9000-000000000000",
					"value": "Sverker Eriksson"
				},
				{
					"type": "remediation developer",
					"lang": "en",
					"user": "00000000-0000-4000-9000-000000000000",
					"value": "Rohan McLure"
				}
			],
			"source": {
				"discovery": "UNKNOWN"
			},
			"datePublic": "2024-01-09T00:00:00.000Z",
			"x_generator": {
				"engine": "Vulnogram 0.1.0-dev"
			}
		},
		"adp": [
			{
				"providerMetadata": {
					"orgID": "af854a3a-2127-422b-91ae-364da2661108",
					"shortName": "CVE",
					"dateUpdated": "2024-08-02T08:21:17.314Z"
				},
				"title": "CVE Program Container",
				"references": [
					{
						"name": "OpenSSL Advisory",
						"tags": [
							"vendor-advisory",
							"x_transferred"
						],
						"url": "https://www.openssl.org/news/secadv/20240109.txt"
					},
					{
						"name": "3.2.1 git commit",
						"tags": [
							"patch",
							"x_transferred"
						],
						"url": "https://github.com/openssl/openssl/commit/5b139f95c9a47a55a0c54100f3837b1eee942b04"
					},
					{
						"name": "3.1.5 git commit",
						"tags": [
							"patch",
							"x_transferred"
						],
						"url": "https://github.com/openssl/openssl/commit/f3fc5808fe9ff74042d639839610d03b8fdcc015"
					},
					{
						"name": "3.0.13 git commit",
						"tags": [
							"patch",
							"x_transferred"
						],
						"url": "https://github.com/openssl/openssl/commit/050d26383d4e264966fb83428e72d5d48f402d35"
					},
					{
						"tags": [
							"x_transferred"
						],
						"url": "https://security.netapp.com/advisory/ntap-20240216-0009/"
					},
					{
						"tags": [
							"x_transferred"
						],
						"url": "https://security.netapp.com/advisory/ntap-20240426-0013/"
					},
					{
						"tags": [
							"x_transferred"
						],
						"url": "https://security.netapp.com/advisory/ntap-20240426-0008/"
					},
					{
						"tags": [
							"x_transferred"
						],
						"url": "http://www.openwall.com/lists/oss-security/2024/03/11/1"
					},
					{
						"tags": [
							"x_transferred"
						],
						"url": "https://security.netapp.com/advisory/ntap-20240503-0011/"
					}
				]
			}
		]
	}
}
