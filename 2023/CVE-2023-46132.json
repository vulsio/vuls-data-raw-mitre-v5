{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.1",
	"cveMetadata": {
		"cveId": "CVE-2023-46132",
		"assignerOrgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
		"assignerShortName": "GitHub_M",
		"state": "PUBLISHED",
		"datePublished": "2023-11-14T20:23:15.643Z",
		"dateUpdated": "2024-08-02T20:37:39.905Z",
		"dateReserved": "2023-10-16T17:51:35.573Z"
	},
	"containers": {
		"cna": {
			"providerMetadata": {
				"orgID": "a0819718-46f1-4df5-94e2-005712e83aaa",
				"shortName": "GitHub_M",
				"dateUpdated": "2023-11-14T20:23:15.643Z"
			},
			"title": "Crosslinking transaction attack in hyperledger/fabric",
			"descriptions": [
				{
					"lang": "en",
					"value": "Hyperledger Fabric is an open source permissioned distributed ledger framework. Combining two molecules to one another, called \"cross-linking\" results in a molecule with a chemical formula that is composed of all atoms of the original two molecules. In Fabric, one can take a block of transactions and cross-link the transactions in a way that alters the way the peers parse the transactions. If a first peer receives a block B and a second peer receives a block identical to B but with the transactions being cross-linked, the second peer will parse transactions in a different way and thus its world state will deviate from the first peer. Orderers or peers cannot detect that a block has its transactions cross-linked, because there is a vulnerability in the way Fabric hashes the transactions of blocks. It simply and naively concatenates them, which is insecure and lets an adversary craft a \"cross-linked block\" (block with cross-linked transactions) which alters the way peers process transactions. For example, it is possible to select a transaction and manipulate a peer to completely avoid processing it, without changing the computed hash of the block. Additional validations have been added in v2.2.14 and v2.5.5 to detect potential cross-linking issues before processing blocks. Users are advised to upgrade. There are no known workarounds for this vulnerability."
				}
			],
			"affected": [
				{
					"vendor": "hyperledger",
					"product": "fabric",
					"versions": [
						{
							"status": "affected",
							"version": ">= 1.0.0, < 2.2.14"
						},
						{
							"status": "affected",
							"version": ">= 2.3.0, < 2.5.5"
						}
					]
				}
			],
			"problemTypes": [
				{
					"descriptions": [
						{
							"type": "CWE",
							"lang": "en",
							"description": "CWE-362: Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
							"cweId": "CWE-362"
						}
					]
				}
			],
			"metrics": [
				{
					"cvssV3_1": {
						"version": "3.1",
						"vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:L",
						"attackVector": "NETWORK",
						"attackComplexity": "LOW",
						"privilegesRequired": "LOW",
						"userInteraction": "NONE",
						"scope": "UNCHANGED",
						"confidentialityImpact": "NONE",
						"integrityImpact": "HIGH",
						"availabilityImpact": "LOW",
						"baseScore": 7.1,
						"baseSeverity": "HIGH"
					}
				}
			],
			"references": [
				{
					"name": "https://github.com/hyperledger/fabric/security/advisories/GHSA-v9w2-543f-h69m",
					"tags": [
						"x_refsource_CONFIRM"
					],
					"url": "https://github.com/hyperledger/fabric/security/advisories/GHSA-v9w2-543f-h69m"
				}
			],
			"source": {
				"advisory": "GHSA-v9w2-543f-h69m",
				"discovery": "UNKNOWN"
			}
		},
		"adp": [
			{
				"providerMetadata": {
					"orgID": "af854a3a-2127-422b-91ae-364da2661108",
					"shortName": "CVE",
					"dateUpdated": "2024-08-02T20:37:39.905Z"
				},
				"title": "CVE Program Container",
				"references": [
					{
						"name": "https://github.com/hyperledger/fabric/security/advisories/GHSA-v9w2-543f-h69m",
						"tags": [
							"x_refsource_CONFIRM",
							"x_transferred"
						],
						"url": "https://github.com/hyperledger/fabric/security/advisories/GHSA-v9w2-543f-h69m"
					}
				]
			}
		]
	}
}
