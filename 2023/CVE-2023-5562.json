{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.1",
	"cveMetadata": {
		"cveId": "CVE-2023-5562",
		"assignerOrgId": "296541fb-a0e3-4ca7-ab3d-683e666d143e",
		"assignerShortName": "KNIME",
		"state": "PUBLISHED",
		"datePublished": "2023-10-12T19:00:54.732Z",
		"dateUpdated": "2024-08-02T07:59:44.813Z",
		"dateReserved": "2023-10-12T18:31:19.504Z"
	},
	"containers": {
		"cna": {
			"providerMetadata": {
				"orgID": "296541fb-a0e3-4ca7-ab3d-683e666d143e",
				"shortName": "KNIME",
				"dateUpdated": "2023-10-12T19:00:54.732Z"
			},
			"title": "Unsafe default allows for cross-site scripting attacks in KNIME Server and KNIME Business Hub",
			"descriptions": [
				{
					"lang": "en",
					"value": "An unsafe default configuration in KNIME Analytics Platform before 5.2.0 allows for a cross-site scripting attack. When KNIME Analytics Platform is used as an executor for either KNIME Server or KNIME Business Hub several JavaScript-based view nodes do not sanitize the data that is displayed by default. If the data to be displayed contains JavaScript this code is executed in the browser and can perform any operations that the current user is allowed to perform silently.\n\n\n\n\nKNIME Analytics Platform already has configuration options with which sanitization of data can be actived, see  https://docs.knime.com/latest/webportal_admin_guide/index.html#html-sanitization-webportal https://docs.knime.com/latest/webportal_admin_guide/index.html#html-sanitization-webportal . However, these are off by default which allows for cross-site scripting attacks.\n\n\nKNIME Analytics Platform 5.2.0 will enable sanitization by default. For all previous releases we recommend users to add the corresponding settings to the executor's knime.ini.\n\n\n",
					"supportingMedia": [
						{
							"type": "text/html",
							"base64": false,
							"value": "<div>An unsafe default configuration in KNIME Analytics Platform before 5.2.0 allows for a cross-site scripting attack. When KNIME Analytics Platform is used as an executor for either KNIME Server or KNIME Business Hub several JavaScript-based view nodes do not sanitize the data that is displayed by default. If the data to be displayed contains JavaScript this code is executed in the browser and can perform any operations that the current user is allowed to perform silently.</div><div><br></div><div>KNIME Analytics Platform already has configuration options with which sanitization of data can be actived, see <a target=\"_blank\" rel=\"nofollow\" href=\"https://docs.knime.com/latest/webportal_admin_guide/index.html#html-sanitization-webportal\">https://docs.knime.com/latest/webportal_admin_guide/index.html#html-sanitization-webportal</a>. However, these are off by default which allows for cross-site scripting attacks.<br></div><div>KNIME Analytics Platform 5.2.0 will enable sanitization by default. For all previous releases we recommend users to add the corresponding settings to the executor's knime.ini.<br></div>"
						}
					]
				}
			],
			"affected": [
				{
					"vendor": "KNIME",
					"product": "KNIME Analytics Platform",
					"modules": [
						"JavaScript views"
					],
					"defaultStatus": "unaffected",
					"versions": [
						{
							"status": "affected",
							"versionType": "semver",
							"version": "0",
							"lessThan": "5.2.0"
						}
					]
				}
			],
			"problemTypes": [
				{
					"descriptions": [
						{
							"type": "CWE",
							"lang": "en",
							"description": "CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
							"cweId": "CWE-79"
						}
					]
				}
			],
			"impacts": [
				{
					"descriptions": [
						{
							"lang": "en",
							"value": "CAPEC-63 Cross-Site Scripting (XSS)"
						}
					],
					"capecId": "CAPEC-63"
				}
			],
			"metrics": [
				{
					"format": "CVSS",
					"scenarios": [
						{
							"lang": "en",
							"value": "GENERAL"
						}
					],
					"cvssV3_1": {
						"version": "3.1",
						"vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
						"attackVector": "NETWORK",
						"attackComplexity": "LOW",
						"privilegesRequired": "NONE",
						"userInteraction": "REQUIRED",
						"scope": "CHANGED",
						"confidentialityImpact": "LOW",
						"integrityImpact": "LOW",
						"availabilityImpact": "NONE",
						"baseScore": 6.1,
						"baseSeverity": "MEDIUM"
					}
				}
			],
			"workarounds": [
				{
					"lang": "en",
					"value": "Sanitization can be enabled for all affected JavaScript-based views by adding -Djs.core.sanitize.clientHTML=true to the executor's knime.ini. See  https://docs.knime.com/latest/webportal_admin_guide/index.html#html-sanitization-webportal https://docs.knime.com/latest/webportal_admin_guide/index.html#html-sanitization-webportal  for more details.\n",
					"supportingMedia": [
						{
							"type": "text/html",
							"base64": false,
							"value": "Sanitization can be enabled for all affected JavaScript-based views by adding <code>-Djs.core.sanitize.clientHTML=true</code> to the executor's knime.ini. See <a target=\"_blank\" rel=\"nofollow\" href=\"https://docs.knime.com/latest/webportal_admin_guide/index.html#html-sanitization-webportal\">https://docs.knime.com/latest/webportal_admin_guide/index.html#html-sanitization-webportal</a> for more details.<br>"
						}
					]
				}
			],
			"references": [
				{
					"url": "https://www.knime.com/security/advisories#CVE-2023-5562"
				}
			],
			"source": {
				"discovery": "EXTERNAL"
			},
			"datePublic": "2023-10-12T19:00:00.000Z",
			"x_generator": {
				"engine": "Vulnogram 0.1.0-dev"
			}
		},
		"adp": [
			{
				"providerMetadata": {
					"orgID": "af854a3a-2127-422b-91ae-364da2661108",
					"shortName": "CVE",
					"dateUpdated": "2024-08-02T07:59:44.813Z"
				},
				"title": "CVE Program Container",
				"references": [
					{
						"tags": [
							"x_transferred"
						],
						"url": "https://www.knime.com/security/advisories#CVE-2023-5562"
					}
				]
			}
		]
	}
}
