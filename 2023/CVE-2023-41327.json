{
  "dataType": "CVE_RECORD",
  "dataVersion": "5.0",
  "cveMetadata": {
    "assignerOrgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
    "assignerShortName": "GitHub_M",
    "cveId": "CVE-2023-41327",
    "datePublished": "2023-09-06T20:38:45.161Z",
    "dateReserved": "2023-08-28T16:56:43.366Z",
    "dateUpdated": "2023-09-06T20:38:45.161Z",
    "state": "PUBLISHED"
  },
  "containers": {
    "cna": {
      "affected": [
        {
          "product": "wiremock",
          "vendor": "wiremock",
          "versions": [
            {
              "status": "affected",
              "version": " org.wiremock:wiremock-webhooks-extension: >= 2.0.0, < 2.35.1"
            },
            {
              "status": "affected",
              "version": " org.wiremock:wiremock-webhooks-extension: >= 3.0.0, < 3.0.3"
            },
            {
              "status": "affected",
              "version": " wiremock-studio: All versions"
            }
          ]
        }
      ],
      "descriptions": [
        {
          "lang": "en",
          "value": "WireMock is a tool for mocking HTTP services. WireMock can be configured to only permit proxying (and therefore recording) to certain addresses. This is achieved via a list of allowed address rules and a list of denied address rules, where the allowed list is evaluated first. \n\nUntil WireMock Webhooks Extension 3.0.0-beta-15, the filtering of target addresses from the proxy mode DID NOT work for Webhooks, so the users were potentially vulnerable regardless of the `limitProxyTargets` settings. Via the WireMock webhooks configuration, POST requests from a webhook might be forwarded to an arbitrary service reachable from WireMockâ€™s instance. For example, If someone is running the WireMock docker Container inside a private cluster, they can trigger internal POST requests against unsecured APIs or even against secure ones by passing a token, discovered using another exploit, via authentication headers. This issue has been addressed in versions 2.35.1 and 3.0.3 of wiremock. Wiremock studio has been discontinued and will not see a fix. Users unable to upgrade should use external firewall rules to define the list of permitted destinations."
        }
      ],
      "metrics": [
        {
          "cvssV3_1": {
            "version": "3.1",
            "vectorString": "CVSS:3.1/AV:A/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:L",
            "baseScore": 4.6,
            "baseSeverity": "MEDIUM",
            "attackComplexity": "LOW",
            "attackVector": "ADJACENT_NETWORK",
            "availabilityImpact": "LOW",
            "confidentialityImpact": "NONE",
            "integrityImpact": "LOW",
            "privilegesRequired": "NONE",
            "scope": "UNCHANGED",
            "userInteraction": "REQUIRED"
          }
        }
      ],
      "problemTypes": [
        {
          "descriptions": [
            {
              "cweid": "CWE-918",
              "description": "CWE-918: Server-Side Request Forgery (SSRF)",
              "lang": "en",
              "type": "CWE"
            }
          ]
        }
      ],
      "providerMetadata": {
        "dateUpdated": "2023-09-06T20:38:45.161Z",
        "orgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
        "shortName": "GitHub_M"
      },
      "references": [
        {
          "name": "https://github.com/wiremock/wiremock/security/advisories/GHSA-hq8w-9w8w-pmx7",
          "tags": [
            "x_refsource_CONFIRM"
          ],
          "url": "https://github.com/wiremock/wiremock/security/advisories/GHSA-hq8w-9w8w-pmx7"
        },
        {
          "name": "https://github.com/wiremock/wiremock/releases/tag/3.0.0-beta-15",
          "tags": [
            "x_refsource_MISC"
          ],
          "url": "https://github.com/wiremock/wiremock/releases/tag/3.0.0-beta-15"
        },
        {
          "name": "https://wiremock.org/docs/configuration/#preventing-proxying-to-and-recording-from-specific-target-addresses",
          "tags": [
            "x_refsource_MISC"
          ],
          "url": "https://wiremock.org/docs/configuration/#preventing-proxying-to-and-recording-from-specific-target-addresses"
        }
      ],
      "source": {
        "advisory": "GHSA-hq8w-9w8w-pmx7",
        "discovery": "UNKNOWN"
      },
      "title": "Controlled SSRF through URL in the WireMock"
    }
  }
}
