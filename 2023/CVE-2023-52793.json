{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.1",
	"cveMetadata": {
		"assignerOrgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
		"assignerShortName": "Linux",
		"cveId": "CVE-2023-52793",
		"datePublished": "2024-05-21T15:31:08.299Z",
		"dateReserved": "2024-05-21T15:19:24.246Z",
		"dateUpdated": "2024-05-21T15:31:08.299Z",
		"state": "PUBLISHED"
	},
	"containers": {
		"cna": {
			"affected": [
				{
					"defaultStatus": "unaffected",
					"product": "Linux",
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"vendor": "Linux",
					"versions": [
						{
							"lessThan": "61576b7a0f28",
							"status": "affected",
							"version": "06744f24696e",
							"versionType": "git"
						},
						{
							"lessThan": "de4825a44456",
							"status": "affected",
							"version": "06744f24696e",
							"versionType": "git"
						},
						{
							"lessThan": "9220c3ef6fef",
							"status": "affected",
							"version": "06744f24696e",
							"versionType": "git"
						}
					]
				},
				{
					"defaultStatus": "affected",
					"product": "Linux",
					"repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
					"vendor": "Linux",
					"versions": [
						{
							"status": "affected",
							"version": "6.3"
						},
						{
							"lessThan": "6.3",
							"status": "unaffected",
							"version": "0",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "6.5.*",
							"status": "unaffected",
							"version": "6.5.13",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "6.6.*",
							"status": "unaffected",
							"version": "6.6.3",
							"versionType": "custom"
						},
						{
							"lessThanOrEqual": "*",
							"status": "unaffected",
							"version": "6.7",
							"versionType": "original_commit_for_fix"
						}
					]
				}
			],
			"descriptions": [
				{
					"lang": "en",
					"value": "In the Linux kernel, the following vulnerability has been resolved:\n\nsamples/bpf: syscall_tp_user: Fix array out-of-bound access\n\nCommit 06744f24696e (\"samples/bpf: Add openat2() enter/exit tracepoint\nto syscall_tp sample\") added two more eBPF programs to support the\nopenat2() syscall. However, it did not increase the size of the array\nthat holds the corresponding bpf_links. This leads to an out-of-bound\naccess on that array in the bpf_object__for_each_program loop and could\ncorrupt other variables on the stack. On our testing QEMU, it corrupts\nthe map1_fds array and causes the sample to fail:\n\n  # ./syscall_tp\n  prog #0: map ids 4 5\n  verify map:4 val: 5\n  map_lookup failed: Bad file descriptor\n\nDynamically allocate the array based on the number of programs reported\nby libbpf to prevent similar inconsistencies in the future"
				}
			],
			"providerMetadata": {
				"dateUpdated": "2024-05-21T15:31:08.299Z",
				"orgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
				"shortName": "Linux"
			},
			"references": [
				{
					"url": "https://git.kernel.org/stable/c/61576b7a0f28f924da06bead92a39a6d9aa2404a"
				},
				{
					"url": "https://git.kernel.org/stable/c/de4825a444560f8cb78b03dda3ba873fab88bc4f"
				},
				{
					"url": "https://git.kernel.org/stable/c/9220c3ef6fefbf18f24aeedb1142a642b3de0596"
				}
			],
			"title": "samples/bpf: syscall_tp_user: Fix array out-of-bound access",
			"x_generator": {
				"engine": "bippy-d175d3acf727"
			}
		}
	}
}
