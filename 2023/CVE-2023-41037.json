{
	"dataType": "CVE_RECORD",
	"dataVersion": "5.1",
	"cveMetadata": {
		"cveId": "CVE-2023-41037",
		"assignerOrgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
		"assignerShortName": "GitHub_M",
		"state": "PUBLISHED",
		"datePublished": "2023-08-29T16:46:47.708Z",
		"dateUpdated": "2024-09-30T17:43:47.802Z",
		"dateReserved": "2023-08-22T16:57:23.931Z"
	},
	"containers": {
		"cna": {
			"providerMetadata": {
				"orgID": "a0819718-46f1-4df5-94e2-005712e83aaa",
				"shortName": "GitHub_M",
				"dateUpdated": "2023-08-29T16:46:47.708Z"
			},
			"title": "Cleartext Signed Message Signature Spoofing in openpgpjs",
			"descriptions": [
				{
					"lang": "en",
					"value": "OpenPGP.js is a JavaScript implementation of the OpenPGP protocol. In affected versions OpenPGP Cleartext Signed Messages are cryptographically signed messages where the signed text is readable without special tools. These messages typically contain a \"Hash: ...\" header declaring the hash algorithm used to compute the signature digest. OpenPGP.js up to v5.9.0 ignored any data preceding the \"Hash: ...\" texts when verifying the signature. As a result, malicious parties could add arbitrary text to a third-party Cleartext Signed Message, to lead the victim to believe that the arbitrary text was signed. A user or application is vulnerable to said attack vector if it verifies the CleartextMessage by only checking the returned `verified` property, discarding the associated `data` information, and instead _visually trusting_ the contents of the original message. Since `verificationResult.data` would always contain the actual signed data, users and apps that check this information are not vulnerable. Similarly, given a CleartextMessage object, retrieving the data using `getText()` or the `text` field returns only the contents that are considered when verifying the signature. Finally, re-armoring a CleartextMessage object (using `armor()` will also result in a \"sanitised\" version, with the extraneous text being removed. This issue has been addressed in version 5.10.1 (current stable version) which will reject messages when calling `openpgp.readCleartextMessage()` and in version 4.10.11 (legacy version) which will will reject messages when calling `openpgp.cleartext.readArmored()`. Users are advised to upgrade. Users unable to upgrade should check the contents of `verificationResult.data` to see what data was actually signed, rather than visually trusting the contents of the armored message."
				}
			],
			"affected": [
				{
					"vendor": "openpgpjs",
					"product": "openpgpjs",
					"versions": [
						{
							"status": "affected",
							"version": "< 4.10.11"
						},
						{
							"status": "affected",
							"version": ">= 5.0.0, < 5.10.1"
						}
					]
				}
			],
			"problemTypes": [
				{
					"descriptions": [
						{
							"type": "CWE",
							"lang": "en",
							"description": "CWE-347: Improper Verification of Cryptographic Signature",
							"cweId": "CWE-347"
						}
					]
				}
			],
			"metrics": [
				{
					"cvssV3_1": {
						"version": "3.1",
						"vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N",
						"attackVector": "NETWORK",
						"attackComplexity": "LOW",
						"privilegesRequired": "NONE",
						"userInteraction": "REQUIRED",
						"scope": "UNCHANGED",
						"confidentialityImpact": "NONE",
						"integrityImpact": "LOW",
						"availabilityImpact": "NONE",
						"baseScore": 4.3,
						"baseSeverity": "MEDIUM"
					}
				}
			],
			"references": [
				{
					"name": "https://github.com/openpgpjs/openpgpjs/security/advisories/GHSA-ch3c-v47x-4pgp",
					"tags": [
						"x_refsource_CONFIRM"
					],
					"url": "https://github.com/openpgpjs/openpgpjs/security/advisories/GHSA-ch3c-v47x-4pgp"
				},
				{
					"name": "https://github.com/openpgpjs/openpgpjs/commit/6b43e02a254853f5ff508ebd1b07541f78b7c566",
					"tags": [
						"x_refsource_MISC"
					],
					"url": "https://github.com/openpgpjs/openpgpjs/commit/6b43e02a254853f5ff508ebd1b07541f78b7c566"
				}
			],
			"source": {
				"advisory": "GHSA-ch3c-v47x-4pgp",
				"discovery": "UNKNOWN"
			}
		},
		"adp": [
			{
				"providerMetadata": {
					"orgID": "af854a3a-2127-422b-91ae-364da2661108",
					"shortName": "CVE",
					"dateUpdated": "2024-08-02T18:46:11.562Z"
				},
				"title": "CVE Program Container",
				"references": [
					{
						"name": "https://github.com/openpgpjs/openpgpjs/security/advisories/GHSA-ch3c-v47x-4pgp",
						"tags": [
							"x_refsource_CONFIRM",
							"x_transferred"
						],
						"url": "https://github.com/openpgpjs/openpgpjs/security/advisories/GHSA-ch3c-v47x-4pgp"
					},
					{
						"name": "https://github.com/openpgpjs/openpgpjs/commit/6b43e02a254853f5ff508ebd1b07541f78b7c566",
						"tags": [
							"x_refsource_MISC",
							"x_transferred"
						],
						"url": "https://github.com/openpgpjs/openpgpjs/commit/6b43e02a254853f5ff508ebd1b07541f78b7c566"
					}
				]
			},
			{
				"providerMetadata": {
					"orgID": "134c704f-9b21-4f2e-91b3-4a467353bcc0",
					"shortName": "CISA-ADP",
					"dateUpdated": "2024-09-30T17:43:47.802Z"
				},
				"title": "CISA ADP Vulnrichment",
				"metrics": [
					{
						"other": {
							"type": "ssvc",
							"content": {
								"id": "CVE-2023-41037",
								"options": [
									{
										"Exploitation": "none"
									},
									{
										"Automatable": "no"
									},
									{
										"Technical Impact": "partial"
									}
								],
								"role": "CISA Coordinator",
								"timestamp": "2024-09-30T17:34:19.116832Z",
								"version": "2.0.3"
							}
						}
					}
				]
			}
		]
	}
}
